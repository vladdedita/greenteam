{"version":3,"file":"bootstrap-vue.esm.js","sources":["../lib/utils/arrayIncludes.js","../lib/mixins/link.js","../lib/components/button-toolbar.vue","../lib/mixins/dropdown.js","../lib/components/modal.vue","../lib/components/pagination.vue","../lib/utils/observe-dom.js","../lib/directives/_target.js","../lib/directives/scrollspy.js","../lib/utils/warn.js","../lib/components/alert.vue","../lib/components/link.vue","../lib/components/breadcrumb.vue","../lib/components/button.vue","../lib/components/button-group.vue","../lib/components/input-group.vue","../lib/components/input-group-addon.vue","../lib/components/input-group-button.vue","../lib/components/card.vue","../lib/components/card-group.vue","../lib/components/carousel.vue","../lib/components/carousel-slide.vue","../lib/utils/isArray.js","../lib/mixins/listen-on-root.js","../lib/components/collapse.vue","../lib/mixins/clickout.js","../lib/components/dropdown.vue","../lib/components/dropdown-item.vue","../lib/components/dropdown-item-button.vue","../lib/components/dropdown-divider.vue","../lib/components/dropdown-header.vue","../lib/components/dropdown-select.vue","../lib/components/form.vue","../lib/components/form-fieldset.vue","../lib/mixins/form.js","../lib/mixins/form-custom.js","../lib/mixins/form-checkbox.js","../lib/components/form-checkbox.vue","../lib/mixins/form-options.js","../lib/components/form-radio.vue","../lib/components/form-input-static.vue","../lib/components/form-input.vue","../lib/components/form-file.vue","../lib/components/form-select.vue","../lib/components/jumbotron.vue","../lib/components/badge.vue","../lib/components/list-group.vue","../lib/components/list-group-item.vue","../lib/components/media.vue","../lib/components/nav.vue","../lib/components/nav-item.vue","../lib/components/nav-item-dropdown.vue","../lib/components/nav-toggle.vue","../lib/components/navbar.vue","../lib/components/nav-text.vue","../lib/components/nav-form.vue","../lib/mixins/popover.js","../lib/components/popover.vue","../lib/components/progress.vue","../lib/components/table.vue","../lib/components/tabs.vue","../lib/components/tab.vue","../lib/components/tooltip.vue","../lib/directives/toggle.js","../lib/directives/modal.js","../lib/index.js"],"sourcesContent":["export default function arrayIncludes(array, value) {\n    return array.indexOf(value) !== -1\n}\n","import warn from '../utils/warn';\nimport arrayIncludes from '../utils/arrayIncludes';\n// Props compatible with vue-router\n// https://github.com/vuejs/vue-router/blob/dev/src/components/link.js\nexport const props = {\n    active: {\n        type: Boolean,\n        default: false\n    },\n\n    activeClass: {\n        type: String,\n        default: \"active\"\n    },\n\n    append: {\n        type: Boolean,\n        default: false\n    },\n\n    disabled: {\n        type: Boolean,\n        default: false\n    },\n\n    event: {\n        type: [String, Array],\n        default: \"click\"\n    },\n\n    exact: {\n        type: Boolean,\n        default: false\n    },\n\n    exactActiveClass: {\n        type: String,\n        default: \"active\"\n    },\n\n    href: {\n        type: String,\n        default: \"#\"\n    },\n\n    rel: {\n        type: String,\n        default: null\n    },\n\n    replace: {\n        type: Boolean,\n        default: false\n    },\n\n    routerTag: {\n        type: String,\n        default: \"a\"\n    },\n\n    tag: {\n        type: String,\n        default: null\n    },\n\n    target: {\n        type: String,\n        default: \"_self\"\n    },\n\n    to: {\n        type: [String, Object],\n        default: null\n    }\n};\n\nexport const computed = {\n    linkProps() {\n        return Object.keys(props).reduce((memo, prop) => {\n            memo[prop] = this[prop];\n\n            return memo;\n        }, {});\n    },\n\n    isRouterLink() {\n        return Boolean(this.$router && this.to && !this.disabled);\n    },\n\n    _href() {\n        if (this.disabled) {\n            return \"#\";\n        }\n\n        // If href explicitly provided\n        if (this.href) {\n            return this.href;\n        }\n\n        // Fallback to `to` prop\n        if (this.to && typeof this.to === \"string\") {\n            return this.to;\n        }\n    },\n\n    computedRel() {\n        if (this.target === \"_blank\" && this.rel === null) {\n            return \"noopener\";\n        }\n        return this.rel || null;\n    },\n\n    componentTag(){\n        if (this.tag) {\n            warn('<b-link> \"tag\" property is deprecated, please use \"routerTag\" property instead.');\n\n            return this.tag;\n        }\n\n        return this.routerTag;\n    },\n\n    linkClassObject() {\n        return [\n            this.active ? (this.exact ? this.exactActiveClass : this.activeClass) : null,\n            this.disabled ? \"disabled\" : null\n        ];\n    }\n};\n\nexport const methods = {\n    linkClick(e) {\n        if (!this.disabled) {\n            this.$root.$emit(\"clicked::link\", this);\n            this.$emit(\"click\", e);\n        } else {\n            e.stopPropagation();\n        }\n\n        if (!this.isRouterLink && this._href === \"#\") {\n            // stop scroll-to-top behavior\n            e.preventDefault();\n        }\n    }\n};\n\nexport default {\n    props,\n    computed,\n    methods\n};\n\nexport function pickLinkProps(...propsToPick) {\n    return Object.keys(props).reduce((memo, prop) => {\n        if (arrayIncludes(propsToPick, prop)) {\n            memo[prop] = props[prop];\n        }\n\n        return memo;\n    }, {});\n}\n\nexport function omitLinkProps(...propsToOmit) {\n    return Object.keys(props).reduce((memo, prop) => {\n        if (!arrayIncludes(propsToOmit, prop)) {\n            memo[prop] = props[prop];\n        }\n\n        return memo;\n    }, {});\n}\n","<template>\n    <div :class=\"classObject\"\n         role=\"toolbar\"\n         :tabindex=\"keyNav ? '0' : null\"\n         @focusin.self=\"focusFirst\"\n         @keydown.left=\"focusNext($event,true)\"\n         @keydown.up=\"focusNext($event,true)\"\n         @keydown.right=\"focusNext($event,false)\"\n         @keydown.down=\"focusNext($event,false)\"\n         @keydown.shift.left=\"focusFirst($event)\"\n         @keydown.shift.up=\"focusFirst($event)\"\n         @keydown.shift.right=\"focusLast($event)\"\n         @keydown.shift.down=\"focusLast($event)\"\n    >\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    const ITEM_SELECTOR = [\n        '.btn:not(.disabled):not([disabled])',\n        '.form-control:not(.disabled):not([disabled])',\n        'select:not(.disabled):not([disabled])',\n        'input[type=\"checkbox\"]:not(.disabled)',\n        'input[type=\"radio\"]:not(.disabled)'\n    ].join(',');\n\n    // Determine if an HTML element is visible - Faster than CSS check\n    function isVisible(el) {\n        return el && (el.offsetWidth > 0 || el.offsetHeight > 0);\n    }\n\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'btn-toolbar',\n                    (this.justify && !this.vertical) ? 'justify-content-between' : ''\n                ];\n            }\n        },\n        props: {\n            justify: {\n                type: Boolean,\n                default: false\n            },\n            keyNav: {\n                type: Boolean,\n                default: false\n            }\n        },\n        methods: {\n            setItemFocus(item) {\n                this.$nextTick(() => {\n                    item.focus();\n                });\n            },\n            focusNext(e, prev) {\n                if (!this.keyNav) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                const items = this.getItems();\n                if (items.length < 1) {\n                    return;\n                }\n                let index = items.indexOf(e.target);\n                if (prev && index > 0) {\n                    index--;\n                } else if (!prev && index < items.length - 1) {\n                    index++;\n                }\n                if (index < 0) {\n                    index = 0;\n                }\n                this.setItemFocus(items[index]);\n            },\n            focusFirst(e) {\n                if (!this.keyNav) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                const items = this.getItems();\n                if (items.length > 0) {\n                    this.setItemFocus(items[0]);\n                }\n            },\n            focusLast(e) {\n                if (!this.keyNav) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                const items = this.getItems();\n                if (items.length > 0) {\n                    this.setItemFocus([items.length - 1]);\n                }\n            },\n            getItems() {\n                let items = Array.prototype.slice.call(this.$el.querySelectorAll(ITEM_SELECTOR));\n                items.forEach(item => {\n                    // Ensure tabfocus is -1 on any new elements\n                    item.tabIndex = -1;\n                });\n                return items.filter(el => isVisible(el));\n            }\n        },\n        mounted() {\n            if (this.keyNav) {\n                // Pre-set the tabindexes if the markup does not include tabindex=\"-1\" on the toolbar items\n                this.getItems();\n            }\n        }\n    };\n</script>\n","import clickOut from './clickout';\n\n// Determine if an HTML element is visible - Faster than CSS check\nfunction isVisible(el) {\n    return el && (el.offsetWidth > 0 || el.offsetHeight > 0);\n}\n\n// Convert a nodeList into an array\nfunction nodeListToArray(nodeList) {\n    return Array.prototype.slice.call(nodeList || []);\n}\n\n// Return an Array of visible items\nfunction filterVisible(els) {\n    return els ? els.filter(el => isVisible(el)) : [];\n}\n\n// Dropdown item CSS selectors\nconst ITEM_SELECTOR = '.dropdown-item:not(.disabled):not([disabled])';\nconst HEADER_SELECTOR = '.dropdown-header';\nconst ALL_SELECTOR = [ITEM_SELECTOR, HEADER_SELECTOR].join(',');\n\nexport default {\n    props: {\n        id: {\n            type: String\n        },\n        text: {\n            type: String,\n            default: ''\n        },\n        dropup: {\n            type: Boolean,\n            default: false\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        right: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            visible: false\n        };\n    },\n    created() {\n        const listener = el => {\n            if (el !== this) {\n                this.visible = false;\n            }\n        };\n\n        // To keep one dropdown opened on page\n        this.$root.$on('shown::dropdown', listener);\n\n        // Hide when clicked on links\n        this.$root.$on('clicked::link', listener);\n    },\n    mounted: clickOut.mounted,\n    destroyed: clickOut.destroyed,\n    watch: {\n        visible(state, old) {\n            if (state === old) {\n                return; // Avoid duplicated emits\n            }\n\n            if (state) {\n                this.$root.$emit('shown::dropdown', this);\n                /*\n                 If this is a touch-enabled device we add extra\n                 empty mouseover listeners to the body's immediate children;\n                 only needed because of broken event delegation on iOS\n                 https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n                 */\n                if (typeof document !== 'undefined' && 'ontouchstart' in document.documentElement) {\n                    const children = Array.prototype.slice.call(document.body.children);\n                    children.forEach(el => {\n                        el.addEventListener('mouseover', this.noop);\n                    });\n                }\n            } else {\n                this.$root.$emit('hidden::dropdown', this);\n                /*\n                 If this is a touch-enabled device we remove the extra\n                 empty mouseover listeners we added for iOS support\n                 */\n                if (typeof document !== 'undefined' && 'ontouchstart' in document.documentElement) {\n                    const children = Array.prototype.slice.call(document.body.children);\n                    children.forEach(el => {\n                        el.removeEventListener('mouseover', this.noop);\n                    });\n                }\n            }\n        }\n    },\n    methods: {\n        ...clickOut.methods,\n        noop() {\n            // Do nothing event handler (used in visible watch)\n        },\n        clickOutListener() {\n            this.visible = false;\n        },\n        click(e) {\n            if (this.disabled) {\n                this.visible = false;\n                return;\n            }\n            if (this.split) {\n                this.$emit('click', e);\n                this.$root.$emit('shown::dropdown', this);\n            } else {\n                this.toggle();\n            }\n        },\n        toggle() {\n            if (this.disabled) {\n                this.visible = false;\n                return;\n            }\n            this.visible = !this.visible;\n            if (this.visible) {\n                this.$nextTick(function () {\n                    // Focus first visible non-disabled item\n                    let item = this.getFirstItem();\n                    if (item) {\n                        this.focusItem(0, [item]);\n                    }\n                });\n            }\n        },\n        onTab() {\n            if (this.visible) {\n                this.visible = false;\n            }\n        },\n        onEsc(e) {\n            if (this.visible) {\n                this.visible = false;\n                e.preventDefault();\n                e.stopPropagation();\n                this.$nextTick(function () {\n                    // Return focus to original trigger button\n                    let el;\n                    if (this.split && this.$refs.toggle) {\n                        el = this.$refs.toggle.$el || this.$refs.toggle;\n                    } else {\n                        el = this.$refs.button.$el || this.$refs.button;\n                    }\n                    if (el && el.focus) {\n                        el.focus();\n                    }\n                });\n            }\n        },\n        focusNext(e, up) {\n            if (!this.visible) {\n                return;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n            this.$nextTick(() => {\n                const items = this.getItems();\n                if (items.length < 1) {\n                    return;\n                }\n                let index = items.indexOf(e.target);\n                if (up && index > 0) {\n                    index--;\n                } else if (!up && index < items.length - 1) {\n                    index++;\n                }\n                if (index < 0) {\n                    index = 0;\n                }\n                this.focusItem(index, items);\n            });\n        },\n        focusHovered(e) {\n            if (!this.visible) {\n                return;\n            }\n            this.$nextTick(() => {\n                const items = this.getItems();\n                if (items.length < 1) {\n                    return;\n                }\n                const index = items.indexOf(e.target);\n                if (index > -1) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    this.focusItem(index, items);\n                }\n            });\n        },\n        focusItem(idx, items) {\n            items.forEach((el, i) => {\n                if (i === idx) {\n                    el.classList.add('active');\n                    el.focus();\n                } else {\n                    el.classList.remove('active');\n                }\n            });\n        },\n        getItems() {\n            // Get all items and headers\n            return filterVisible(nodeListToArray(this.$refs.menu.querySelectorAll(ALL_SELECTOR)));\n        },\n        getFirstItem() {\n            // Get the first non-header non-disabled item\n            let item = filterVisible(nodeListToArray(this.$refs.menu.querySelectorAll(ITEM_SELECTOR)))[0];\n            if (!item) {\n                // If no items then try a header\n                item = filterVisible(nodeListToArray(this.$refs.menu.querySelectorAll(HEADER_SELECTOR)))[0];\n            }\n            return item || null;\n        }\n    }\n};\n","<template>\n    <div>\n        <transition-group enter-class=\"hidden\"\n                          enter-to-class=\"\"\n                          enter-active-class=\"\"\n                          @after-enter=\"focusFirst\"\n                          leave-class=\"show\"\n                          leave-active-class=\"\"\n                          leave-to-class=\"hidden\"\n        >\n            <div :class=\"['modal',{fade: !noFade, show: is_visible}]\"\n                 :id=\"id || null\"\n                 role=\"dialog\"\n                 ref=\"modal\"\n                 key=\"modal\"\n                 v-show=\"is_visible\"\n                 @click=\"onClickOut()\"\n                 @keyup.esc=\"onEsc()\"\n            >\n\n                <div :class=\"['modal-dialog','modal-'+size]\">\n                    <div class=\"modal-content\"\n                         tabindex=\"-1\"\n                         role=\"document\"\n                         ref=\"content\"\n                         :aria-labelledby=\"(hideHeader || !id) ? null : (id + '__BV_title_')\"\n                         :aria-describedby=\"id ? (id + '__BV_body_') : null\"\n                         @click.stop\n                    >\n\n                        <header class=\"modal-header\" ref=\"header\" v-if=\"!hideHeader\">\n                            <slot name=\"modal-header\">\n                                <h5 class=\"modal-title\" :id=\"id ? (id + '__BV_title_') : null\">\n                                    <slot name=\"modal-title\">{{title}}</slot>\n                                </h5>\n                                <button type=\"button\"\n                                        v-if=\"!hideHeaderClose\"\n                                        class=\"close\"\n                                        :aria-label=\"headerCloseLabel\"\n                                        @click=\"hide\"\n                                >\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </slot>\n                        </header>\n\n                        <div class=\"modal-body\" ref=\"body\" :id=\"id ? (id + '__BV_body_') : null\">\n                            <slot></slot>\n                        </div>\n\n                        <footer class=\"modal-footer\" ref=\"footer\" v-if=\"!hideFooter\">\n                            <slot name=\"modal-footer\">\n                                <b-btn v-if=\"!okOnly\"\n                                       variant=\"secondary\"\n                                       :size=\"buttonSize\"\n                                       @click=\"hide(false)\"\n                                ><slot name=\"modal-cancel\">{{ closeTitle }}</slot></b-btn>\n                                <b-btn variant=\"primary\"\n                                       :size=\"buttonSize\"\n                                       :disabled=\"okDisabled\"\n                                       @click=\"hide(true)\"\n                                ><slot name=\"modal-ok\">{{ okTitle }}</slot></b-btn>\n                            </slot>\n                        </footer>\n\n                    </div>\n                </div>\n            </div>\n\n            <div key=\"modal-backdrop\"\n                 :class=\"['modal-backdrop',{fade: !noFade, show: is_visible}]\"\n                 v-if=\"is_visible\"\n            ></div>\n        </transition-group>\n    </div>\n</template>\n\n<style scoped>\n    .hidden {\n        opacity: 0 !important;\n    }\n\n    /* Make modal display as block instead of inline style, and because Vue's v-show deletes inline \"display\" style */\n    .modal {\n        display: block;\n    }\n</style>\n\n<script>\n    import bBtn from './button.vue';\n    import listenOnRoot from '../mixins/listen-on-root';\n\n    const FOCUS_SELECTOR = [\n        'button:not([disabled])',\n        'input:not([disabled])',\n        'select:not([disabled])',\n        'textarea:not([disabled])',\n        'a:not([disabled]):not(.disabled)',\n        '[tabindex]:not([disabled]):not(.disabled)'\n    ].join(',');\n\n    // Determine if an HTML element is visible - Faster than CSS check\n    function isVisible(el) {\n        return el && (el.offsetWidth > 0 || el.offsetHeight > 0);\n    }\n    \n    // Find the first visible element contained in a given root element\n    function findFirstVisible(root, selector) {\n        if (!root || !root.querySelectorAll || !selector) {\n            return null;\n        }\n        let els = Array.prototype.slice.call(root.querySelectorAll(selector));\n\n        // IE 10 & 11 do not support native array.find()\n        // So we try native find first, then fall back to a loop\n        let el = els.find ? els.find(el => isVisible(el)) : null;\n        for (let i = 0; !el && i < els.length; i++) {\n            if (isVisible(els[i])) {\n                el = els[i];\n            }\n        }\n        return el;\n    }\n\n    export default {\n        mixins: [listenOnRoot],\n        components: {bBtn},\n        data() {\n            return {\n                is_visible: false,\n                return_focus: this.returnFocus || null\n            };\n        },\n        model: {\n            prop: 'visible',\n            event: 'change'\n        },\n        computed: {\n            body() {\n                if (typeof document !== 'undefined') {\n                    return document.querySelector('body');\n                }\n            }\n        },\n        watch: {\n            visible(new_val, old_val) {\n                if (new_val === old_val) {\n                    return;\n                }\n\n                if (new_val) {\n                    this.show();\n                } else {\n                    this.hide();\n                }\n            }\n        },\n        props: {\n            id: {\n                type: String,\n                default: null\n            },\n            title: {\n                type: String,\n                default: ''\n            },\n            size: {\n                type: String,\n                default: 'md'\n            },\n            buttonSize: {\n                type: String,\n                default: 'md'\n            },  \n            noFade: {\n                type: Boolean,\n                default: false\n            },\n            noCloseOnBackdrop: {\n                type: Boolean,\n                default: false\n            },\n            noCloseOnEsc: {\n                type: Boolean,\n                default: false\n            },\n            noAutoFocus: {\n                type: Boolean,\n                default: false\n            },\n            hideHeader: {\n                type: Boolean,\n                default: false\n            },\n            hideFooter: {\n                type: Boolean,\n                default: false\n            },\n            hideHeaderClose: {\n                type: Boolean,\n                default: false\n            },\n            okOnly: {\n                type: Boolean,\n                default: false\n            },\n            okDisabled: {\n                type: Boolean,\n                default: false\n            },\n            visible: {\n                type: Boolean,\n                default: false\n            },\n            returnFocus: {\n                default: null\n            },\n            headerCloseLabel: {\n                type: String,\n                default: 'Close'\n            },\n            closeTitle: {\n                type: String,\n                default: 'Close'\n            },\n            okTitle: {\n                type: String,\n                default: 'OK'\n            }\n        },\n        methods: {\n            show() {\n                if (this.is_visible) {\n                    return;\n                }\n                this.$emit('show');\n                this.is_visible = true;\n                this.$root.$emit('shown::modal', this.id);\n                this.body.classList.add('modal-open');\n                this.$emit('shown');\n                this.$emit('change', true);\n                if (typeof document !== 'undefined') {\n                    // Guard against infinite focus loop\n                    document.removeEventListener('focusin', this.enforceFocus, false);\n                    // Handle constrained focus\n                    document.addEventListener('focusin', this.enforceFocus, false);\n                }\n            },\n            hide(isOK) {\n                if (!this.is_visible) {\n                    return;\n                }\n\n                // Create event object\n                let canceled = false;\n                const e = {\n                    isOK,\n                    cancel() {\n                        canceled = true;\n                    }\n                };\n\n                // Emit events\n                this.$emit('change', false);\n                this.$emit('hide', e);\n\n                if (isOK === true) {\n                    this.$emit('ok', e);\n                } else if (isOK === false) {\n                    this.$emit('cancel', e);\n                }\n\n                // Hide if not canceled\n                if (!canceled) {\n                    if (typeof document !== 'undefined') {\n                        // Remove focus handler\n                        document.removeEventListener('focusin', this.enforceFocus, false);\n                        // Return focus to original button/trigger element if provided\n                        this.returnFocusTo();\n                    }\n                    this.is_visible = false;\n                    this.$root.$emit('hidden::modal', this.id);\n                    this.$emit('hidden', e);\n                    this.body.classList.remove('modal-open');\n                }\n            },\n            onClickOut() {\n                // If backdrop clicked, hide modal\n                if (this.is_visible && !this.noCloseOnBackdrop) {\n                    this.hide();\n                }\n            },\n            onEsc() {\n                // If ESC pressed, hide modal\n                if (this.is_visible && !this.noCloseOnEsc) {\n                    this.hide();\n                }\n            },\n            focusFirst() {\n                // Don't try and focus if we are SSR\n                if (typeof document === 'undefined') {\n                    return;\n                }\n                this.$nextTick(() => {\n                    // If activeElement is child of content, no need to change focus\n                    if (document.activeElement && this.$refs.content.contains(document.activeElement)) {\n                        return;\n                    }\n\n                    let el;\n                    if (!this.noAutoFocus) {\n                        // Focus the modal's first focusable item, searching body, footer, then header\n                        if (this.$refs.body) {\n                            el = findFirstVisible(this.$refs.body, FOCUS_SELECTOR);\n                        }\n                        if (!el && this.$refs.footer) {\n                            el = findFirstVisible(this.$refs.footer, FOCUS_SELECTOR);\n                        }\n                        if (!el && this.$refs.header) {\n                            el = findFirstVisible(this.$refs.header, FOCUS_SELECTOR);\n                        }\n                    }\n                    if (!el) {\n                        // Focus the modal content wrapper\n                        el = this.$refs.content;\n                    }\n                    if (el && el.focus) {\n                        el.focus();\n                    }\n                });\n            },\n            returnFocusTo() {\n                // Prrefer returnFocus prop over event specified value\n                let el = this.returnFocus || this.return_focus || null;\n\n                if (el) {\n                    if (typeof el === 'string') {\n                        // CSS Selector\n                        el = document.querySelector(el);\n                    }\n                    if (el && el.$el && typeof el.$el.focus === 'function') {\n                        // Component vm reference\n                        el.$el.focus();\n                    } else if (el && typeof el.focus === 'function') {\n                        // Plain element\n                        el.focus();\n                    }\n                }\n            },\n            enforceFocus(e) {\n                // If focus leaves modal, bring it back\n                // Event Listener bound on document\n                if (this.is_visible &&\n                    document !== e.target &&\n                    this.$refs.content &&\n                    this.$refs.content !== e.target &&\n                    !this.$refs.content.contains(e.target)) {\n                    this.$refs.content.focus();\n                }\n            },\n            showHandler(id, triggerEl) {\n                if (id === this.id) {\n                    this.return_focus = triggerEl || null;\n                    this.show();\n                }\n            },\n            hideHandler(id) {\n                if (id === this.id) {\n                    this.hide();\n                }\n            }\n        },\n        created() {\n            this.listenOnRoot('show::modal', this.showHandler);\n            this.listenOnRoot('hide::modal', this.hideHandler);\n        },\n        mounted() {\n            if (this.visible === true) {\n                this.show();\n            }\n        },\n        destroyed() {\n            // Make sure event listener is rmoved\n            if (typeof document !== 'undefined') {\n                document.removeEventListener('focusin', this.enforceFocus, false);\n            }\n        }\n    };\n\n</script>\n","<template>\n    <ul :class=\"['pagination',btnSize]\"\n        :role=\"role\"\n        :aria-disabled=\"disabled ? 'true' : 'false'\"\n        :aria-label=\"ariaLabel ? ariaLabel : null\"\n        @focusin.self=\"focusCurrent\"\n        @keydown.left.prevent=\"focusPrev\"\n        @keydown.right.prevent=\"focusNext\"\n        @keydown.shift.left.prevent=\"focusFirst\"\n        @keydown.shift.right.prevent=\"focusLast\"\n    >\n\n        <!-- Goto First Page button -->\n        <template v-if=\"!hideGotoEndButtons\">\n            <li v-if=\"isActive(1) || disabled\" class=\"page-item disabled\" aria-hidden=\"true\">\n                <span class=\"page-link\" v-html=\"firstText\"></span>\n            </li>\n            <li v-else class=\"page-item\">\n                <a :role=\"buttonRole\"\n                   class=\"page-link\"\n                   :aria-label=\"labelFirstPage\"\n                   tabindex=\"-1\"\n                   href=\"#\"\n                   @click.prevent=\"setPage($event, 1)\"\n                   @keydown.enter.prevent=\"setPage($event, 1)\"\n                   @keydown.space.prevent=\"setPage($event, 1)\"\n                ><span aria-hidden=\"true\" v-html=\"firstText\"></span></a>\n            </li>\n        </template>\n\n        <!-- Goto Previous page button -->\n        <li v-if=\"isActive(1) || disabled\" class=\"page-item disabled\" aria-hidden=\"true\">\n            <span class=\"page-link\" v-html=\"prevText\"></span>\n        </li>\n        <li v-else class=\"page-item\">\n            <a :role=\"buttonRole\"\n               class=\"page-link\"\n               :aria-label=\"labelPrevPage\"\n               tabindex=\"-1\"\n               href=\"#\"\n               @click.prevent=\"setPage($event, currentPage - 1)\"\n               @keydown.enter.prevent=\"setPage($event, currentPage - 1)\"\n               @keydown.space.prevent=\"setPage($event, currentPage - 1)\"\n            ><span aria-hidden=\"true\" v-html=\"prevText\"></span></a>\n        </li>\n\n        <!-- First Ellipsis Bookend -->\n        <li v-if=\"showFirstDots\" class=\"page-item disabled hidden-xs-down\" role=\"seperator\">\n            <span class=\"page-link\" v-html=\"ellipsisText\"></span>\n        </li>\n\n        <!-- Pages links -->\n        <li v-for=\"page in pageList\"\n            :class=\"pageItemClasses(page)\"\n            :key=\"page.number\"\n        >\n            <a :role=\"buttonRole\"\n               :class=\"pageLinkClasses(page)\"\n               :disabled=\"disabled\"\n               :aria-disabled=\"disabled ? 'true' : 'false'\"\n               :aria-label=\"labelPage + ' ' + page.number\"\n               :aria-current=\"isActive(page) ? 'true' : 'false'\"\n               :aria-posinset=\"page.number\"\n               :aria-setsize=\"numberOfPages\"\n               tabindex=\"-1\"\n               @click.prevent=\"setPage($event, page.number)\"\n               @keydown.enter.prevent=\"setPage($event, page.number)\"\n               @keydown.space.prevent=\"setPage($event, page.number)\"\n            >{{ page.number }}</a>\n        </li>\n\n        <!-- Last Ellipsis Bookend -->\n        <li v-if=\"showLastDots\" class=\"page-item disabled hidden-xs-down\" role=\"seperator\">\n            <span class=\"page-link\" v-html=\"ellipsisText\"></span>\n        </li>\n\n        <!-- Goto Next page -->\n        <li v-if=\"isActive(numberOfPages) || disabled\" class=\"page-item disabled\" aria-hidden=\"true\">\n            <span class=\"page-link\" v-html=\"nextText\"></span>\n        </li>\n        <li v-else class=\"page-item\">\n            <a :role=\"buttonRole\"\n               class=\"page-link\"\n               :aria-label=\"labelNextPage\"\n               tabindex=\"-1\"\n               @click.prevent=\"setPage($event, currentPage + 1)\"\n               @keydown.enter.prevent=\"setPage($event, currentPage + 1)\"\n               @keydown.space.prevent=\"setPage($event, currentPage + 1)\"\n            ><span aria-hidden=\"true\" v-html=\"nextText\"></span></a>\n        </li>\n\n        <!-- Goto Last page -->\n        <template v-if=\"!hideGotoEndButtons\">\n            <li v-if=\"isActive(numberOfPages) || disabled\" class=\"page-item disabled\" aria-hidden=\"true\">\n                <span class=\"page-link\" v-html=\"lastText\"></span>\n            </li>\n            <li v-else class=\"page-item\">\n                <a :role=\"buttonRole\"\n                   class=\"page-link\"\n                   :aria-label=\"labelLastPage\"\n                   tabindex=\"-1\"\n                   @click.prevent=\"setPage($event, numberOfPages)\"\n                   @keydown.enter.prevent=\"setPage($event, numberOfPages)\"\n                   @keydown.space.prevent=\"setPage($event, numberOfPages)\"\n                ><span aria-hidden=\"true\" v-html=\"lastText\"></span></a>\n            </li>\n        </template>\n    </ul>\n</template>\n\n<script>\n// Determine if an HTML element is visible - Faster than CSS check\nfunction isVisible(el) {\n    return el && (el.offsetWidth > 0 || el.offsetHeight > 0);\n}\n\n// Make an aray of N to N+X\nfunction makePageArray(startNum, numPages) {\n    return Array.apply(null, {length: numPages}).map(function(value, index){\n        return { number: index + startNum, className: null };\n    });\n}\n\n// Threshold of limit size when we start/stop showing ellipsis\nconst ELLIPSIS_THRESHOLD = 3;\n\nexport default {\n    data() {\n        return {\n            showFirstDots: false,\n            showLastDots: false,\n            currentPage: this.value\n        };\n    },\n    computed: {\n        numberOfPages() {\n            const result = Math.ceil(this.totalRows / this.perPage);\n            return (result < 1) ? 1 : result;\n        },\n        btnSize() {\n            return this.size ? `pagination-${this.size}` : '';\n        },\n        pageList() {\n            // Sanity checks\n            if (this.currentPage > this.numberOfPages) {\n              this.currentPage = this.numberOfPages;\n            } else if (this.currentPage < 1) {\n              this.currentPage = 1;\n            }\n\n            // - Hide first ellipsis marker\n            this.showFirstDots = false;\n            // - Hide last ellipsis marker\n            this.showLastDots = false;\n\n            let numLinks = this.limit;\n            let startNum = 1;\n\n            if (this.numberOfPages <= this.limit) {\n                // Special Case: Less pages available than the limit of displayed pages\n                numLinks = this.numberOfPages;\n            } else if (this.currentPage < (this.limit - 1) && this.limit > ELLIPSIS_THRESHOLD) {\n                // We are near the beginning of the page list\n                if (!this.hideEllipsis) {\n                    numLinks = this.limit - 1;\n                    this.showLastDots = true;\n                }\n            } else if ((this.numberOfPages - this.currentPage + 2) < this.limit && this.limit > ELLIPSIS_THRESHOLD) {\n                // We are near the end of the list\n                if (!this.hideEllipsis) {\n                    this.showFirstDots = true;\n                    numLinks = this.limit - 1;\n                }\n                startNum = this.numberOfPages - numLinks + 1;\n            } else {\n                // We are somewhere in the middle of the page list\n                if (this.limit > ELLIPSIS_THRESHOLD && !this.hideEllipsis) {\n                    this.showFirstDots = true;\n                    this.showLastDots = true;\n                    numLinks = this.limit - 2;\n                }\n                startNum = this.currentPage - Math.floor(numLinks / 2);\n            }\n\n            // Sanity checks\n            if (startNum < 1) {\n                startNum = 1;\n            } else if (startNum > (this.numberOfPages - numLinks)) {\n                startNum = this.numberOfPages - numLinks + 1;\n            }\n\n            // Generate list of page numbers\n            const pages = makePageArray(startNum, numLinks);\n\n            // We limit to a total of 3 page buttons on small screens\n            // Ellipsis will also be hidden on small screens\n            if (pages.length > 3) {\n                const idx = this.currentPage - startNum;\n                if (idx === 0) {\n                    // Keep leftmost 3 buttons visible\n                    for (let i = 3; i < pages.length; i++) {\n                        pages[i].className = 'hidden-xs-down';\n                    }\n                } else if (idx === pages.length - 1) {\n                    // Keep rightmost 3 buttons visible\n                    for (let i = 0; i < pages.length - 3; i++) {\n                        pages[i].className = 'hidden-xs-down';\n                    }\n                } else {\n                    // hide left button(s)\n                    for (let i = 0; i < idx - 1; i++) {\n                        pages[i].className = 'hidden-xs-down';\n                    }\n                    // hide right button(s)\n                    for (let i = pages.length - 1; i > idx + 1; i--) {\n                        pages[i].className = 'hidden-xs-down';\n                    }\n                }\n            }\n            \n            return pages;\n        }\n    },\n    methods: {\n        isActive(page) {\n            return page === this.currentPage;\n        },\n        pageItemClasses(page) {\n            const active = this.isActive(page.number);\n            return [\n                'page-item',\n                this.disabled ? 'disabled' : '',\n                active ? 'active' : '',\n                page.className\n            ];\n        },\n        pageLinkClasses(page) {\n            const active = this.isActive(page.number);\n            return [\n                'page-link',\n                this.disabled ? 'disabled' : '',\n                active ? 'active' : ''\n            ];\n        },\n        setPage(e, num) {\n            if (this.disabled) {\n                e.preventDefault();\n                e.stopPropagation();\n                return;\n            }\n            if (num > this.numberOfPages) {\n                this.currentPage = this.numberOfPages;\n            } else if (num < 1) {\n                this.currentpage = 1;\n            } else {\n                this.currentPage = num;\n            }\n            this.$nextTick(() => {\n                // Keep the current button focused if possible\n                if (isVisible(e.target) && e.target.focus) {\n                    e.target.focus();\n                } else {\n                    this.focusCurrent();\n                }\n            });\n            this.$emit('change', this.currentPage);\n        },\n        getButtons() {\n            const buttons = Array.prototype.slice.call(this.$el.querySelectorAll('a.page-link'));\n            // Return only buttons that are visible\n            return buttons.filter(btn => isVisible(btn));\n        },\n        setBtnFocus(btn) {\n            this.$nextTick(() => {\n                btn.focus();\n            });\n        },\n        focusFirst() {\n            const btn = this.getButtons().find(el => !el.disabled);\n            if (btn && btn.focus && btn !== document.activeElement) {\n                this.setBtnFocus(btn);\n            }\n        },\n        focusLast() {\n            const btn = this.getButtons().reverse().find(el => !el.disabled);\n            if (btn && btn.focus && btn !== document.activeElement) {\n                this.setBtnFocus(btn);\n            }\n        },\n        focusCurrent() {\n            const btn = this.getButtons().find(el => parseInt(el.getAttribute('aria-posinset'), 10) === this.currentPage);\n            if (btn && btn.focus) {\n                this.setBtnFocus(btn);\n            } else {\n                // Fallback if current page is not in button list\n                this.focusFirst();\n            }\n        },\n        focusPrev() {\n            const buttons = this.getButtons();\n            const idx = buttons.indexOf(document.activeElement);\n            if (idx > 0 && !buttons[idx - 1].disabled && buttons[idx - 1].focus) {\n                this.setBtnFocus(buttons[idx - 1]);\n            }\n        },\n        focusNext() {\n            const buttons = this.getButtons();\n            const idx = buttons.indexOf(document.activeElement);\n            const cnt = buttons.length - 1;\n            if (idx < cnt && !buttons[idx + 1].disabled && buttons[idx + 1].focus) {\n                this.setBtnFocus(buttons[idx + 1]);\n            }\n        }\n    },\n    watch: {\n        currentPage(newPage, oldPage) {\n            if (newPage !== oldPage) {\n                this.$emit('input', newPage);\n            }\n        },\n        value(newValue, oldValue) {\n            if (newValue !== oldValue) {\n                this.currentPage = newValue;\n            }\n        }\n    },\n    props: {\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        value: {\n            type: Number,\n            default: 1\n        },\n        limit: {\n            type: Number,\n            default: 5\n        },\n        perPage: {\n            type: Number,\n            default: 20\n        },\n        totalRows: {\n            type: Number,\n            default: 20\n        },\n        size: {\n            type: String,\n            default: 'md'\n        },\n        hideGotoEndButtons: {\n            type: Boolean,\n            default: false\n        },\n        ariaLabel: {\n            type: String,\n            default: 'Pagination'\n        },\n        labelFirstPage: {\n            type: String,\n            default: 'Goto first page'\n        },\n        firstText: {\n            type: String,\n            default: '&laquo'\n        },\n        labelPrevPage: {\n            type: String,\n            default: 'Goto previous page'\n        },\n        prevText: {\n            type: String,\n            default: '&lsaquo;'\n        },\n        labelNextPage: {\n            type: String,\n            default: 'Goto next page'\n        },\n        nextText: {\n            type: String,\n            default: '&rsaquo;'\n        },\n        labelLastPage: {\n            type: String,\n            default: 'Goto last page'\n        },\n        lastText: {\n            type: String,\n            default: '&raquo;'\n        },\n        labelPage: {\n            type: String,\n            default: 'Goto page'\n        },\n        hideEllipsis: {\n            type: Boolean,\n            default: false\n        },\n        ellipsisText: {\n            type: String,\n            default: '&hellip;'\n        },\n        role: {\n            type: String,\n            default: 'group'\n        },\n        buttonRole: {\n            type: String,\n            default: 'button'\n        }\n    }\n};\n</script>\n\n<style scoped>\n    .page-item {\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n    }\n    .page-item.disabled {\n        cursor: not-allowed;\n        opacity: .65;\n    }\n</style>\n","/**\n * Observe a DOM element changes, falls back to eventListener mode\n * @param {Element} el The DOM element to observe\n * @param {Function} callback callback to be called on change\n * @param {object} [opts={childList: true, subtree: true}] observe options\n * @see http://stackoverflow.com/questions/3219758\n */\nexport default function observeDOM(el, callback, opts) {\n    const MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\n    const eventListenerSupported = window.addEventListener;\n\n    if (MutationObserver) {\n        // Define a new observer\n        const obs = new MutationObserver(mutations => {\n            if (mutations[0].addedNodes.length > 0 || mutations[0].removedNodes.length > 0) {\n                callback();\n            }\n        });\n\n        // Have the observer observe foo for changes in children\n        obs.observe(el, Object.assign({childList: true, subtree: true}, opts));\n    } else if (eventListenerSupported) {\n        el.addEventListener('DOMNodeInserted', callback, false);\n        el.addEventListener('DOMNodeRemoved', callback, false);\n    }\n}\n","const all_listen_types = {hover: true, click: true, focus: true};\n\nexport default function targets(el, binding, listen_types, fn) {\n    const vm = el.__vue__;\n\n    if (!vm) {\n        console.warn('__vue__ is not available on element', el);\n        return [];\n    }\n\n    const targets = Object.keys(binding.modifiers || {})\n        .filter(t => !all_listen_types[t]);\n\n    if (binding.value) {\n        targets.push(binding.value);\n    }\n\n    const listener = () => {\n        fn({targets, vm});\n    };\n\n    Object.keys(all_listen_types).forEach(type => {\n        if (listen_types[type] || binding.modifiers[type]) {\n            el.addEventListener(type, listener);\n        }\n    });\n    \n    // Return the list of targets\n    return targets;\n}\n","import isArray from '../utils/isArray';\nconst inBrowser = typeof window !== 'undefined';\nconst isServer = !inBrowser;\n\n/*\n * Pollyfill for Element.closest() for IE :(\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#Polyfill\n */\n\nif (inBrowser && window.Element && !Element.prototype.closest) {\n    Element.prototype.closest = function (s) {\n        const matches = (this.document || this.ownerDocument).querySelectorAll(s);\n        let el = this;\n        let i;\n        do {\n            i = matches.length;\n            // eslint-disable-next-line no-empty\n            while (--i >= 0 && matches.item(i) !== el) {\n            }\n        } while ((i < 0) && (el = el.parentElement));\n        return el;\n    };\n}\n\n/*\n * Constants / Defaults\n */\n\nconst NAME = 'v-b-scrollspy';\nconst EVENT = 'scrollspy::activate';\nconst BVSS = '__BV_ScrollSpy__';\n\nconst Default = {\n    element: 'body',\n    offset: 10,\n    method: 'auto',\n    throttle: 200\n};\n\nconst DefaultType = {\n    element: '(string|element)',\n    offset: 'number',\n    method: 'string',\n    throttle: 'number'\n};\n\nconst ClassName = {\n    DROPDOWN_ITEM: 'dropdown-item',\n    DROPDOWN_MENU: 'dropdown-menu',\n    DROPDOWN_TOGGLE: 'dropdown-toggle',\n    NAV_LINK: 'nav-link',\n    LIST_ITEM: 'list-group-item',\n    ACTIVE: 'active'\n};\n\nconst Selector = {\n    ACTIVE: '.active',\n    NAV_LIST_GROUP: '.nav, .list-group',\n    NAV: '.nav',\n    LIST_GROUP: '.list-group',\n    NAV_LINKS: '.nav-link',\n    LIST_ITEMS: '.list-group-item',\n    DROPDOWN: '.dropdown',\n    DROPDOWN_ITEMS: '.dropdown-item',\n    DROPDOWN_TOGGLE: '.dropdown-toggle'\n};\n\nconst OffsetMethod = {\n    OFFSET: 'offset',\n    POSITION: 'position'\n};\n\n/*\n * DOM Utility Methods\n */\n\nfunction isElement(obj) {\n    return obj.nodeType;\n}\n\n// Wrapper for Element.closest to emulate jQuery's closest (sorta)\nfunction closest(element, selector) {\n    const el = element.closest(selector);\n    return el === element ? null : el;\n}\n\n// Query Selector All wrapper\nfunction $QSA(selector, element) {\n    if (!element) {\n        element = document;\n    }\n    if (!isElement(element)) {\n        return [];\n    }\n    return Array.prototype.slice.call(element.querySelectorAll(selector));\n}\n\n// Query Selector wrapper\nfunction $QS(selector, element) {\n    if (!element) {\n        element = document;\n    }\n    if (!isElement(element)) {\n        return null;\n    }\n    return element.querySelector(selector) || null;\n}\n\n/*\n * Utility Methods\n */\n\n// Get Vue VM from element\nfunction getVm(el) {\n    return el ? el.__vue__ : null;\n}\n\n// Better var type detection\nfunction toType(obj) {\n    return ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n}\n\n// Check config properties for expected types\nfunction typeCheckConfig(componentName, config, configTypes) {\n    for (const property in configTypes) {\n        if (Object.prototype.hasOwnProperty.call(configTypes, property)) {\n            const expectedTypes = configTypes[property];\n            const value = config[property];\n            const valueType = value && isElement(value) ? 'element' : toType(value);\n\n            if (!new RegExp(expectedTypes).test(valueType)) {\n                console.error(\n                    componentName + ': Option \"' + property + '\" provided type \"' +\n                    valueType + '\" but expected type \"' + expectedTypes + '\"'\n                );\n            }\n        }\n    }\n}\n\n/*\n * ScrollSpy Class\n */\n\nfunction ScrollSpy(el, binding) {\n    // The element that contains the nav-links et al\n    this._$el = el;\n    // The selectors to find the nav-links\n    this._selector = [\n        Selector.NAV_LINKS,\n        Selector.LIST_ITEMS,\n        Selector.DROPDOWN_ITEMS\n    ].join(',');\n    // Start off with default configurtion\n    this._config = Object.assign({}, Default);\n    // Target HREF IDs and their offsets\n    this._offsets = [];\n    this._targets = [];\n    // The currently active target (as an HREF id)\n    this._activeTarget = null;\n    // Curent scroll height (for detecting document height changes)\n    this._scrollHeight = 0;\n    // Reference to the $root VM so we can spew events\n    this._$root = null;\n    // Reference to our throttled resize timeout\n    this._resizeTimeout = null;\n\n    // Process bindings/config\n    this.updateConfig(binding);\n}\n\n/*\n * ScrollSpy Public methods\n */\n\n// Update config\nScrollSpy.prototype.updateConfig = function (binding) {\n    // If Argument, assume element ID\n    if (binding.arg) {\n        // Element ID specified as arg. We must pre-pend #\n        this._config.element = '#' + binding.arg;\n    }\n\n    // Process modifiers\n    Object.keys(binding.modifiers).forEach(val => {\n        if (/^\\d+$/.test(val)) {\n            // Offest value\n            this._config.offset = parseInt(val, 10);\n        } else if (/^(auto|position|offset)$/.test(val)) {\n            // Offset method\n            this._config.method = val;\n        }\n    });\n\n    // Process value\n    if (typeof binding.value === 'string') {\n        // Value is  a CSS ID or selector\n        this._config.element = binding.value;\n    } else if (typeof binding.value === 'number') {\n        // Value is offset\n        this._config.offset = Math.round(binding.value);\n    } else if (typeof binding.value === 'object') {\n        // Value is config object\n        Object.keys(binding.value).filter(k => Boolean(DefaultType[k])).forEach(k => {\n            this._config[k] = binding.value[k];\n        });\n    }\n\n    // Check the config and log error to console. Unknown options are ignored\n    typeCheckConfig(NAME, this._config, DefaultType);\n\n    // Get Vue instance from element\n    const vm = getVm(this._$el);\n    if (vm && vm.$root) {\n        this._$root = vm.$root;\n    }\n\n    return this;\n};\n\n// Turn on event listener\nScrollSpy.prototype.listen = function () {\n    const scroller = this._getScroller();\n    if (scroller) {\n        if (scroller.tagName !== 'BODY') {\n            scroller.addEventListener('scroll', this, false);\n        }\n        window.addEventListener('scroll', this, false);\n        window.addEventListener('orientationchange', this, false);\n        window.addEventListener('resize', this, false);\n    }\n\n    return this;\n};\n\n// Turn off event listener\nScrollSpy.prototype.unListen = function () {\n    const scroller = this._getScroller();\n    if (scroller) {\n        if (scroller.tagName !== 'BODY') {\n            scroller.removeEventListener('scroll', this, false);\n        }\n        window.removeEventListener('scroll', this, false);\n        window.removeEventListener('orientationchange', this, false);\n        window.removeEventListener('resize', this, false);\n    }\n\n    return this;\n};\n\n// Refresh the positions of the target IDs\nScrollSpy.prototype.refresh = function () {\n    const scroller = this._getScroller();\n    if (!scroller) {\n        return this;\n    }\n\n    const autoMethod = scroller.tagName === 'BODY' ? OffsetMethod.OFFSET : OffsetMethod.POSITION;\n    const offsetMethod = this._config.method === 'auto' ? autoMethod : this._config.method;\n    const offsetBase = offsetMethod === OffsetMethod.OFFSET ? 0 : this._getScrollTop();\n\n    this._offsets = [];\n    this._targets = [];\n    this._scrollHeight = this._getScrollHeight();\n\n    // Find all nav link/dropdown/list-item links in our element\n    $QSA(this._selector, this._$el).map(el => {\n        const href = el.getAttribute('href');\n        if (href && href.charAt(0) === '#' && href !== '#' && href.indexOf('#/') === -1) {\n            const target = $QS(href, scroller);\n            if (!target) {\n                return null;\n            }\n            const bcr = target.getBoundingClientRect();\n            if (bcr.width || bcr.height) {\n                return {\n                    offset: (offsetMethod === OffsetMethod.OFFSET ? bcr.top : target.offsetTop) + offsetBase,\n                    href\n                };\n            }\n        }\n        return null;\n    }).filter(\n        item => item\n    ).sort(\n        (a, b) => a.offset - b.offset\n    ).forEach(item => {\n        this._offsets.push(item.offset);\n        this._targets.push(item.href);\n    });\n\n    return this;\n};\n\n// Handle the active target selection\nScrollSpy.prototype.process = function () {\n    if (!this._getScroller) {\n        return this;\n    }\n    const scrollTop = this._getScrollTop() + this._config.offset;\n    const scrollHeight = this._getScrollHeight();\n    const maxScroll = this._config.offset + scrollHeight - this._getOffsetHeight();\n\n    if (this._scrollHeight !== scrollHeight) {\n        this.refresh();\n    }\n\n    if (scrollTop >= maxScroll) {\n        const target = this._targets[this._targets.length - 1];\n        if (this._activeTarget !== target) {\n            this._activate(target);\n        }\n        return this;\n    }\n\n    if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) {\n        this._activeTarget = null;\n        this._clear();\n        return this;\n    }\n\n    for (let i = this._offsets.length; i--;) {\n        const isActiveTarget =\n            this._activeTarget !== this._targets[i] &&\n            scrollTop >= this._offsets[i] &&\n            (this._offsets[i + 1] === undefined ||\n            scrollTop < this._offsets[i + 1]);\n\n        if (isActiveTarget) {\n            this._activate(this._targets[i]);\n        }\n    }\n\n    return this;\n};\n\n// Dispose  of our stuff\nScrollSpy.prototype.dispose = function () {\n    // Ensure we are not listening to events\n    this.unListen();\n\n    // Garbage collection\n    clearTimeout(this._resizeTimeout);\n    this._resizeTimeout = null;\n    this._$el = null;\n    this._config = null;\n    this._selector = null;\n    this._offsets = null;\n    this._targets = null;\n    this._activeTarget = null;\n    this._scrollHeight = null;\n    this._$root = null;\n};\n\n/*\n * ScrollSpy event handler\n */\n\nScrollSpy.prototype.handleEvent = function (e) {\n    const self = this;\n\n    function resizeThrottle() {\n        clearTimeout(this._resizeTimeout);\n        this._resizeTimeout = setTimeout(() => {\n            self.refresh().process();\n        }, self._config.throttle || Default.throttle);\n    }\n\n    if (e.type === 'scroll') {\n        this.process();\n    } else if (e.type === 'orientationchange') {\n        this.refresh().process();\n    } else if (e.type === 'resize') {\n        resizeThrottle();\n    }\n};\n\n/*\n * ScrollSpy private methods\n */\n\n// Get the srolling element\nScrollSpy.prototype._getScroller = function () {\n    if (isServer) {\n        return null;\n    }\n    const scroller = this._config.element;\n    if (!scroller) {\n        return null;\n    }\n    if (scroller && isElement(scroller)) {\n        return scroller;\n    } else if (typeof scroller === 'string') {\n        if (scroller === 'body') {\n            return document.body;\n        }\n        // Otherwise assume CSS selector\n        return $QS(scroller);\n    }\n    return null;\n};\n\n// Return the scroller top position\nScrollSpy.prototype._getScrollTop = function () {\n    const scroller = this._getScroller();\n    if (!scroller) {\n        return 0;\n    }\n    return scroller.tagName === 'BODY' ? window.pageYOffset : scroller.scrollTop;\n};\n\n// Return the scroller height\nScrollSpy.prototype._getScrollHeight = function () {\n    const scroller = this._getScroller();\n    if (!scroller) {\n        return 0;\n    }\n    return scroller.tagName === 'BODY' ?\n        Math.max(document.body.scrollHeight, document.documentElement.scrollHeight) :\n        scroller.scrollHeight;\n};\n\n// Return the scroller offset top position\nScrollSpy.prototype._getOffsetHeight = function () {\n    const scroller = this._getScroller();\n    if (!scroller) {\n        return 0;\n    }\n    return scroller.tagName === 'BODY' ? window.innerHeight : scroller.getBoundingClientRect().height;\n};\n\n// Activate the scrolled in target nav-link\nScrollSpy.prototype._activate = function (target) {\n    this._activeTarget = target;\n    this._clear();\n\n    let queries = this._selector.split(',');\n    queries = queries.map(selector => {\n        return selector + '[href=\"' + target + '\"]';\n    });\n\n    const links = $QSA(queries.join(','), this._$el);\n\n    links.forEach(link => {\n        if (link.classList.contains(ClassName.DROPDOWN_ITEM)) {\n            // This is a dropdown item, so find the .dropdown-toggle and set it's state\n            const dropdown = closest(link, Selector.DROPDOWN);\n            if (dropdown) {\n                const toggle = $QS(Selector.DROPDOWN_TOGGLE, dropdown);\n                if (toggle) {\n                    this._setActiveState(toggle, true);\n                }\n            }\n            // Also set this link's state\n            this._setActiveState(link, true);\n        } else {\n            // Set triggered link as active\n            this._setActiveState(link, true);\n            // Set triggered links parents as active\n            // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\n            // Handle parent .nav's and .list-group's\n            this._setParentsSiblingActiveState(link, Selector.NAV_LIST_GROUP, [ClassName.NAV_LINK, ClassName.LIST_ITEM], true);\n        }\n    });\n\n    // Signal event to root, passing ID of target\n    if (links && links.length > 0 && this._$root && this._$root.$emit) {\n        this._$root.$emit(EVENT, target);\n    }\n};\n\n// Clear the 'active' targets in our nav component\nScrollSpy.prototype._clear = function () {\n    $QSA(this._selector, this._$el).filter(el => {\n        if (el.classList.contains(ClassName.ACTIVE)) {\n            const href = el.getAttribute('href');\n            if (href.charAt(0) !== '#' || href.indexOf('#/') === 0) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }).forEach(el => {\n        this._setActiveState(el, false);\n    });\n};\n\n// Set the active state. if el has a vue insatnce then try setting the active prop,\n// Else fallback to adding the active class\nScrollSpy.prototype._setActiveState = function (el, state) {\n    if (el) {\n        if (el.classList.contains(ClassName.NAV_LINK) && !el.classList.contains(ClassName.DROPDOWN_TOGGLE)) {\n            // Special case where VM with 'active' prop is on parent element\n            el = el.parentElement;\n        }\n        const vm = getVm(el);\n        if (vm && Object.prototype.hasOwnProperty.call(vm.$props, 'active')) {\n            // This is a component that has an `active` prop\n            vm.$props.active = state;\n        } else {\n            // Fallback to setting class attribute since item doesn't have an 'active' prop\n            el.classList[state ? 'add' : 'remove'](ClassName.ACTIVE);\n        }\n    }\n};\n\n// Find all the matching parents given a CSS selector, then find previous sibling that matches the supplied classes\n// And then set the active state on each immediate previous sibling of the parent(s)\nScrollSpy.prototype._setParentsSiblingActiveState = function (element, selector, classes, state) {\n    if (!classes) {\n        return;\n    }\n    if (!isArray(classes)) {\n        classes = [classes];\n    }\n    let el = element;\n    while (el) {\n        el = closest(el, selector);\n        if (el && el.previousElementSibling) {\n            for (let i = 0; i < classes.length - 1; i++) {\n                if (el.previousElementSibling.classList.contains(classes[i])) {\n                    this._setActiveState(el, state);\n                }\n            }\n        }\n    }\n};\n\n/*\n * Export our directive\n */\n\nexport default {\n    bind(el, binding) {\n        if (isServer || el[BVSS]) {\n            return;\n        }\n        el[BVSS] = new ScrollSpy(el, binding);\n    },\n    inserted(el, binding) {\n        if (isServer || !el[BVSS]) {\n            return;\n        }\n        el[BVSS].updateConfig(binding).listen().refresh().process();\n    },\n    update(el, binding) {\n        if (isServer || !el[BVSS]) {\n            return;\n        }\n        el[BVSS].updateConfig(binding).refresh().process();\n    },\n    componentUpdated(el, binding) {\n        if (isServer || !el[BVSS]) {\n            return;\n        }\n        el[BVSS].updateConfig(binding).refresh().process();\n    },\n    unbind(el) {\n        if (isServer || !el[BVSS]) {\n            return;\n        }\n        // Remove scroll event listener on scrollElId\n        el[BVSS].unListen().dispose();\n        el[BVSS] = null;\n    }\n};\n","export default function(message) {\n    console.warn(`[Bootstrap-Vue warn]: ${message}`);\n}\n","<template>\n    <div v-if=\"localShow\"\n         :class=\"classObject\"\n         role=\"alert\"\n         aria-live=\"polite\"\n         aria-atomic=\"true\"\n    >\n        <button type=\"button\"\n                class=\"close\"\n                data-dismiss=\"alert\"\n                aria-label=\"dismissLabel\"\n                v-if=\"dismissible\"\n                @click.stop.prevent=\"dismiss\"\n        >\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    import warn from '../utils/warn';\n\n    export default {\n        data() {\n            return {\n                countDownTimerId: null,\n                dismissed: false\n            };\n        },\n        created() {\n            if (this.state) {\n                warn('<b-alert> \"state\" property is deprecated, please use \"variant\" property instead.');\n            }\n        },\n        computed: {\n            classObject() {\n                return ['alert', this.alertVariant, this.dismissible ? 'alert-dismissible' : ''];\n            },\n            alertVariant() {\n                const variant = this.state || this.variant || 'info';\n                return `alert-${variant}`;\n            },\n            localShow() {\n                return !this.dismissed && (this.countDownTimerId || this.show);\n            }\n        },\n        props: {\n            variant: {\n                type: String,\n                default: 'info'\n            },\n            state: {\n                type: String,\n                default: null\n            },\n            dismissible: {\n                type: Boolean,\n                default: false\n            },\n            dismissLabel: {\n                type: String,\n                default: 'Close'\n            },\n            show: {\n                type: [Boolean, Number],\n                default: false\n            }\n        },\n        watch: {\n            show() {\n                this.showChanged();\n            }\n        },\n        mounted() {\n            this.showChanged();\n        },\n        methods: {\n            dismiss() {\n                this.dismissed = true;\n                this.$emit('dismissed');\n                this.clearCounter();\n            },\n            clearCounter() {\n                if (this.countDownTimerId) {\n                    clearInterval(this.countDownTimerId);\n                }\n            },\n            showChanged() {\n                // Reset dismiss status\n                this.dismissed = false;\n\n                // No timer for boolean values\n                if (this.show === true || this.show === false || this.show === null || this.show === 0) {\n                    return;\n                }\n\n                let dismissCountDown = this.show;\n                this.$emit('dismiss-count-down', dismissCountDown);\n\n                // Start counter\n                this.clearCounter();\n                this.countDownTimerId = setInterval(() => {\n                    if (dismissCountDown < 2) {\n                        return this.dismiss();\n                    }\n                    dismissCountDown--;\n                    this.$emit('dismiss-count-down', dismissCountDown);\n                }, 1000);\n            }\n        }\n    };\n</script>\n","<template>\n    <!-- When VueRouter is available -->\n    <a v-if=\"isRouterLink\"\n       is=\"router-link\"\n       :active-class=\"activeClass\"\n       :exact-active-class=\"exactActiveClass\"\n       :disabled=\"disabled\"\n       :aria-disabled=\"disabled ? 'true' : 'false'\"\n       :to=\"to\"\n       :exact=\"exact\"\n       :append=\"append\"\n       :replace=\"replace\"\n       :event=\"event\"\n       :tag=\"componentTag\"\n       :class=\"linkClassObject\"\n       @click.native=\"linkClick\">\n        <slot></slot>\n    </a>\n\n    <!-- Fallback mode -->\n    <a v-else\n       :disabled=\"disabled\"\n       :aria-disabled=\"disabled ? 'true' : 'false'\"\n       :href=\"_href\"\n       :target=\"target || null\"\n       :rel=\"computedRel\"\n       :class=\"linkClassObject\"\n       @click=\"linkClick\">\n        <slot></slot>\n    </a>\n</template>\n\n<script>\nimport linkMixin from '../mixins/link';\n\nexport default {\n    mixins: [linkMixin]\n};\n</script>\n","<template>\n    <ol class=\"breadcrumb\">\n        <li v-for=\"normalizedItem in normalizedItems\"\n            :class=\"['breadcrumb-item', normalizedItem.active ? 'active' : null]\"\n            @click=\"onClick(normalizedItem._originalItem)\"\n            role=\"presentation\">\n            <span v-if=\"normalizedItem.active\"\n                  :aria-current=\"ariaCurrent\"\n                  v-html=\"normalizedItem.text\"></span>\n            <b-link v-else\n                    v-bind=\"normalizedItem._linkProps\"\n                    v-html=\"normalizedItem.text\"></b-link>\n        </li>\n        <slot></slot>\n    </ol>\n</template>\n\n<script>\nimport bLink from './link.vue';\nimport { props as linkProps } from '../mixins/link';\nimport arrayIncludes from '../utils/arrayIncludes';\n\nconst bLinkPropKeys = Object.keys(linkProps);\n\nexport default {\n    components: { bLink },\n    computed: {\n        normalizedItems() {\n            let userDefinedActive = false;\n            const originalItemsLength = this.items.length;\n\n            return this.items.map((item, index) => {\n                let normalizedItem = { _originalItem: item };\n                // if no active state is defined,\n                // default to the last item in the array as active\n                const isLast = index === originalItemsLength - 1;\n\n                // nothing defined except the text\n                if (typeof item === 'string') {\n                    Object.assign(normalizedItem, { text: item, link: '#', active: isLast });\n                } else {\n                    Object.assign(normalizedItem, item);\n                }\n\n                // don't default the active state if given a boolean value,\n                // or if a user defined value has already been given\n                if (normalizedItem.active !== true && normalizedItem.active !== false && !userDefinedActive) {\n                    normalizedItem.active = isLast;\n                } else if (normalizedItem.active) {\n                    // here we know we've been given an active value,\n                    // so we won't set a default value\n                    userDefinedActive = true;\n                }\n\n                if (normalizedItem.link) {\n                    // default the link value to bLink's href prop\n                    normalizedItem.href = normalizedItem.link;\n                }\n\n                // stuff all the bLink props into a single place\n                // so we can bind to the component\n                // for dynamic prop proxying\n                normalizedItem._linkProps = Object.keys(normalizedItem).reduce((memo, itemProp) => {\n                    if (arrayIncludes(bLinkPropKeys, itemProp)) {\n                        memo[itemProp] = normalizedItem[itemProp];\n                    }\n\n                    return memo;\n                }, {});\n\n                return normalizedItem;\n            });\n        }\n    },\n    props: {\n        items: {\n            type: Array,\n            default: () => [],\n            required: true\n        },\n        ariaCurrent: {\n            type: String,\n            default: 'location'\n        }\n    },\n    methods: {\n        onClick(item) {\n            this.$emit('click', item);\n        }\n    }\n};\n</script>\n","<template>\n    <button v-bind=\"conditionalLinkProps\"\n            :is=\"componentType\"\n            :class=\"classList\"\n            :type=\"btnType\"\n            :disabled=\"disabled\"\n            @click=\"onClick\">\n        <slot></slot>\n    </button>\n</template>\n\n<script>\nimport bLink from './link.vue';\nimport { omitLinkProps, props as originalLinkProps, computed } from '../mixins/link';\n\n// Grab a fresh object of link props (omitLinkProps does this)\n// less the 'href' and 'to' props\n// that we will reconstruct without any defaults\n// so our computed 'componentType' functions properly\nconst linkProps = Object.assign(omitLinkProps('href', 'to'), {\n    href: { type: originalLinkProps.href.type },\n    to: { type: originalLinkProps.to.type }\n});\n\nexport default {\n    components: { bLink },\n    computed: {\n        linkProps: computed.linkProps,\n        classList() {\n            return [\n                'btn',\n                this.btnVariant,\n                this.btnSize,\n                this.btnBlock,\n                this.btnDisabled\n            ];\n        },\n        componentType() {\n            return (this.href || this.to) ? 'b-link' : 'button';\n        },\n        btnBlock() {\n            return this.block ? `btn-block` : '';\n        },\n        btnVariant() {\n            return this.variant ? `btn-${this.variant}` : `btn-secondary`;\n        },\n        btnSize() {\n            return this.size ? `btn-${this.size}` : '';\n        },\n        btnDisabled() {\n            return this.disabled ? 'disabled' : '';\n        },\n        btnType() {\n            return (this.href || this.to) ? null : this.type; \n        },\n        conditionalLinkProps() {\n            return this.componentType === 'button' ? {} : this.linkProps;\n        }\n    },\n    // merge our prepared link props with button props\n    props: Object.assign(linkProps, {\n        block: {\n            type: Boolean,\n            default: false\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        size: {\n            type: String,\n            default: null\n        },\n        variant: {\n            type: String,\n            default: null\n        },\n        type: {\n            type: String,\n            default: 'button'\n        }\n    }),\n    methods: {\n        onClick(e) {\n            if (this.disabled) {\n                e.stopPropagation();\n                e.preventDefault();\n            } else {\n                this.$emit('click', e);\n            }\n        }\n    }\n};\n</script>\n","<template>\n    <div :class=\"classObject\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'btn-group',\n                    this.vertical ? 'btn-group-vertical' : '',\n                    this.size ? ('btn-group-' + this.size) : ''\n                ];\n            }\n        },\n        props: {\n            vertical: {\n                type: Boolean,\n                default: false\n            },\n            size: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n    <div :class=\"classObject\" role=\"group\">\n        <slot name=\"left\">\n            <div v-if=\"left\" class=\"input-group-addon\" v-html=\"left\"></div>\n        </slot>\n\n        <slot></slot>\n\n        <slot name=\"right\">\n            <div v-if=\"right\" class=\"input-group-addon\" v-html=\"right\"></div>\n        </slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'input-group',\n                    this.size ? ('input-group-' + this.size) : '',\n                    this.state ? ('has-' + this.state) : ''\n                ];\n            }\n        },\n        props: {\n            size: {\n                type: String,\n                default: null\n            },\n            state: {\n                type: String,\n                default: null\n            },\n            left: {\n                type: String,\n                default: null\n            },\n            right: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"input-group-addon\" :id=\"id || null\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: {\n            id: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"input-group-btn\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: {}\n    };\n</script>\n","<template>\n    <component :is=\"tag\" :class=\"['card',cardVariant,cardAlign,cardInverse]\">\n        <!-- Card Image Slot-->\n        <slot name=\"img\" ref=\"img\">\n            <img v-if=\"img\" :src=\"img\" :alt=\"imgAlt\" class=\"card-img\">\n        </slot>\n\n        <!-- Card Header-->\n        <component v-if=\"header || $slots['header']\"\n                   :is=\"headerTag\"\n                   :class=\"['card-header', headerVariant?('bg-'+headerVariant):'', headerClass]\"\n        >\n            <slot name=\"header\">\n                <div v-html=\"header\"></div>\n            </slot>\n        </component>\n\n        <!--Show custom block when no-block prop is set-->\n        <template v-if=\"noBlock\">\n            <slot></slot>\n        </template>\n\n        <!-- Card Standard Blocks-->\n        <div :class=\"blockClass\" v-else>\n            <h4 v-if=\"title\" class=\"card-title\" v-html=\"title\"></h4>\n            <h6 v-if=\"subTitle\" class=\"card-subtitle mb-2 text-muted\" v-html=\"subTitle\"></h6>\n            <slot></slot>\n        </div>\n\n        <!-- Card Footer-->\n        <component v-if=\"footer || $slots['footer']\"\n                   :is=\"footerTag\"\n                   :class=\"['card-footer', footerVariant?('bg-'+footerVariant):'', footerClass]\"\n        >\n            <slot name=\"footer\">\n                <div v-html=\"footer\"></div>\n            </slot>\n        </component>\n    </component>\n</template>\n\n<script>\n    export default {\n        computed: {\n            blockClass() {\n                return [\n                    'card-block',\n                    this.overlay ? 'card-img-overlay' : null\n                ];\n            },\n            cardVariant() {\n                return this.variant ? `card-${this.variant}` : null;\n            },\n            cardInverse() {\n                if (this.overlay || this.inverse) {\n                    return 'card-inverse';\n                }\n                // Auto inverse colored cards\n                if (this.inverse === null && this.variant && this.variant.length > 0 &&\n                    this.variant.indexOf('outline') === -1) {\n                    return 'card-inverse';\n                }\n            },\n            cardAlign() {\n                return this.align ? `text-${this.align}` : null;\n            }\n        },\n        props: {\n            align: {\n                type: String,\n                default: null\n            },\n            inverse: {\n                type: Boolean,\n                // It should remain null for auto inverse\n                default: null\n            },\n            variant: {\n                type: String,\n                default: null\n            },\n            tag: {\n                type: String,\n                default: 'div'\n            },\n\n            // Header\n            header: {\n                type: String,\n                default: null\n            },\n            headerVariant: {\n                type: String,\n                default: null\n            },\n            headerClass: {\n                type: [String, Array],\n                default: ''\n            },\n            headerTag: {\n                type: String,\n                default: 'div'\n            },\n\n            // Footer\n            footer: {\n                type: String,\n                default: null\n            },\n            footerVariant: {\n                type: String,\n                default: null\n            },\n            footerClass: {\n                type: [String, Array],\n                default: ''\n            },\n            footerTag: {\n                type: String,\n                default: 'div'\n            },\n\n            // Main block\n            title: {\n                type: String,\n                default: null\n            },\n            subTitle: {\n                type: String,\n                default: null\n            },\n            noBlock: {\n                type: Boolean,\n                default: false\n            },\n\n            // Image\n            img: {\n                type: String,\n                default: null\n            },\n            imgAlt: {\n                type: String,\n                default: null\n            },\n            overlay: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"tag\" :class=\"['card-' + type]\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n    export default {\n        computed: {\n            type() {\n                if (this.deck) {\n                    return 'deck';\n                }\n\n                if (this.columns) {\n                    return 'columns';\n                }\n\n                return 'group';\n            }\n        },\n        props: {\n            tag: {\n                type: String,\n                default: 'div'\n            },\n            deck: {\n                type: Boolean,\n                default: false\n            },\n            columns: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"carousel slide\"\n         role=\"region\"\n         :id=\"id || null\"\n         :style=\"{background,height}\"\n         :aria-busy=\"isSliding ? 'true' : 'false'\"\n         @mouseenter=\"pause\"\n         @mouseleave=\"start\"\n         @focusin=\"pause\"\n         @focusout=\"restart($event)\"\n         @keydown.left.stop.prevent=\"prev\"\n         @keydown.right.stop.prevent=\"next\"\n    >\n\n        <!-- Wrapper for slides -->\n        <div class=\"carousel-inner\"\n             role=\"list\"\n             :id=\"id ? (id + '__BV_inner_') : null\"\n        >\n            <slot></slot>\n        </div>\n\n        <!-- Controls -->\n        <template v-if=\"controls\">\n            <a class=\"carousel-control-prev\"\n               href=\"#\"\n               role=\"button\"\n               :aria-controls=\"id ? (id + '__BV_inner_') : null\"\n               @click.stop.prevent=\"prev\"\n               @keydown.enter.stop.prevent=\"prev\"\n               @keydown.space.stop.prevent=\"prev\"\n            >\n                <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                <span class=\"sr-only\">{{labelPrev}}</span>\n            </a>\n            <a class=\"carousel-control-next\"\n               href=\"#\"\n               role=\"button\"\n               :aria-controls=\"id ? (id + '__BV_inner_') : null\"\n               @click.stop.prevent=\"next\"\n               @keydown.enter.stop.prevent=\"next\"\n               @keydown.space.stop.prevent=\"next\"\n            >\n                <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                <span class=\"sr-only\">{{labelNext}}</span>\n            </a>\n        </template>\n\n        <!-- Indicators -->\n        <ol class=\"carousel-indicators\"\n            role=\"group\"\n            v-show=\"indicators\"\n            :id=\"id ? (id + '__BV_indicators_') : null\"\n            :aria-hidden=\"indicators ? 'false' : 'true'\"\n            :aria-label=\"(indicators && labelIndicators) ? labelIndicators : null\"\n            :aria-owns=\"(indicators && id) ? (id + '__BV_inner_') : null\"\n        >\n            <li v-for=\"n in slides.length\"\n                role=\"button\"\n                :id=\"id ? (id + '__BV_indicator_' + n + '_') : null\"\n                :tabindex=\"indicators ? '0' : '-1'\"\n                :class=\"{active:n-1 === index}\"\n                :aria-current=\"n-1 === index ? 'true' : 'false'\"\n                :aria-posinset=\"n\"\n                :aria-setsize=\"slides.length\"\n                :aria-label=\"labelGotoSlide + ' ' + n\"\n                :aria-describedby=\"slides[n-1].id || null\"\n                :aria-controls=\"id ? (id + '__BV_inner_') : null\"\n                @click=\"index=n-1\"\n                @keydown.enter.stop.prevent=\"index=n-1\"\n                @keydown.space.stop.prevent=\"index=n-1\"\n            ></li>\n        </ol>\n\n    </div>\n</template>\n\n<script>\n    const DIRECTION = {\n        next: {\n            current: 'carousel-item-left',\n            next: 'carousel-item-right',\n            overlay: 'carousel-item-next'\n        },\n        prev: {\n            current: 'carousel-item-right',\n            next: 'carousel-item-left',\n            overlay: 'carousel-item-prev'\n        }\n    };\n\n    export default {\n        data() {\n            return {\n                index: 0,\n                isSliding: false,\n                slides: []\n            };\n        },\n        props: {\n            id: {\n                type: String\n            },\n            labelPrev: {\n                type: String,\n                default: 'Previous Slide'\n            },\n            labelNext: {\n                type: String,\n                default: 'Next Slide'\n            },\n            labelGotoSlide: {\n                type: String,\n                default: 'Goto Slide'\n            },\n            labelIndicators: {\n                type: String,\n                default: 'Select a slide to display'\n            },\n            interval: {\n                type: Number,\n                default: 5000\n            },\n            indicators: {\n                type: Boolean,\n                default: false\n            },\n            controls: {\n                type: Boolean,\n                default: false\n            },\n            height: {\n                type: String\n            },\n            background: {\n                type: String\n            }\n        },\n        methods: {\n            // Previous slide\n            prev() {\n                if (this.index <= 0) {\n                    this.index = this.slides.length - 1;\n                } else {\n                    this.index--;\n                }\n            },\n\n            // Next slide\n            next() {\n                if (typeof document !== 'undefined' && document.visibilityState && document.hidden) {\n                    // Don't animate when page is not visible\n                    return;\n                }\n                if (this.index >= this.slides.length - 1) {\n                    this.index = 0;\n                } else {\n                    this.index++;\n                }\n            },\n\n            // Pause auto rotation\n            pause() {\n                if (this.interval === 0 || typeof this.interval === 'undefined') {\n                    return;\n                }\n                clearInterval(this._intervalId);\n                this._intervalId = null;\n                // Make current slide focusable for screen readers\n                this.slides[this.index].tabIndex = 0;\n            },\n\n            // Start auto rotate slides\n            start() {\n                if (this.interval === 0 || typeof this.interval === 'undefined') {\n                    return;\n                }\n                this.slides.forEach(slide => {\n                    slide.tabIndex = -1;\n                });\n                this._intervalId = setInterval(() => {\n                    this.next();\n                }, this.interval);\n            },\n\n            // Re-Start auto rotate slides when focus leaves the carousel\n            restart(e) {\n                if (!e.relatedTarget || !this.$el.contains(e.relatedTarget)) {\n                    this.start();\n                }\n            }\n            \n        },\n        mounted() {\n            // Get all slides\n            this.slides = Array.prototype.slice.call(this.$el.querySelectorAll('.carousel-item'));\n\n            // Set first slide as active\n            this.slides[0].classList.add('active');\n            const self = this;\n            this.slides.forEach((slide, idx) => {\n                const n = idx + 1;\n                slide.setAttribute('aria-current', idx === 0 ? 'true' : 'false');\n                slide.setAttribute('aria-posinset', String(n));\n                slide.setAttribute('aria-setsize', String(self.slides.length));\n                slide.tabIndex = -1;\n                if (self.id) {\n                    slide.setAttribute('aria-controlledby', self.id + '__BV_indicator_' + n + '_');\n                }\n            });\n\n            // Auto rotate slides\n            this._intervalId = null;\n            this.start();\n        },\n        watch: {\n            index(val, oldVal) {\n                if (val === oldVal) {\n                    return;\n                }\n\n                if (this.isSliding) {\n                    this.index = oldVal;\n                    return;\n                }\n\n                // Determine sliding direction\n                let direction = (val > oldVal) ? DIRECTION.next : DIRECTION.prev;\n\n                // Rotates\n                if (oldVal === 0 && val === this.slides.length - 1) {\n                    direction = DIRECTION.prev;\n                } else if (oldVal === this.slides.length - 1 && val === 0) {\n                    direction = DIRECTION.next;\n                }\n\n                // Determine current and next slides\n                const currentSlide = this.slides[oldVal];\n                const nextSlide = this.slides[val];\n\n                if (!currentSlide || !nextSlide) {\n                    return;\n                }\n\n                // Start animating\n                this.isSliding = true;\n\n                nextSlide.classList.add(direction.next, direction.overlay);\n                currentSlide.classList.add(direction.current);\n\n                this._carouselAnimation = setTimeout(() => {\n                    this.$emit('slide', val);\n\n                    currentSlide.classList.remove('active');\n                    currentSlide.setAttribute('aria-current', 'false');\n                    currentSlide.setAttribute('aria-hidden', 'true');\n                    currentSlide.tabIndex = -1;\n                    currentSlide.classList.remove(direction.current);\n\n                    nextSlide.classList.add('active');\n                    nextSlide.setAttribute('aria-current', 'true');\n                    nextSlide.setAttribute('aria-hidden', 'false');\n                    nextSlide.tabIndex = -1;\n                    nextSlide.classList.remove(direction.next, direction.overlay);\n\n                    if (!this._intervalId) {\n                        // Focus the current slide for screen readers if not in play mode\n                        currentSlide.tabIndex = 0;\n                        this.$nextTick(() => {\n                            currentSlide.focus();\n                        });\n                    }\n\n                    this.isSliding = false;\n                }, 500);\n            }\n        },\n        destroyed() {\n            clearTimeout(this._carouselAnimation);\n            clearInterval(this._intervalId);\n        }\n    };\n\n</script>\n","<template>\n    <div class=\"carousel-item\"\n         role=\"listitem\"\n         :id=\"id || null\"\n         :style=\"{background,height}\"\n    >\n        <img class=\"d-block img-fluid\" v-if=\"img\" :src=\"img\" :alt=\"imgAlt\">\n        <div :class=\"contentClasses\">\n            <h3 v-if=\"caption\" v-html=\"caption\"></h3>\n            <p v-if=\"text\" v-html=\"text\"></p>\n            <slot></slot>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: {\n            id: {\n                type: String\n            },\n            img: {\n                type: String\n            },\n            imgAlt: {\n                type: String\n            },\n            contentVisibleUp: {\n                type: String\n            },\n            caption: {\n                type: String\n            },\n            text: {\n                type: String\n            },\n            background: {\n                type: String\n            },\n            height: {\n                type: String\n            }\n        },\n        computed: {\n            contentClasses() {\n                const classes = {\n                    'carousel-caption': Boolean(this.caption)\n                };\n                if (this.contentVisibleUp) {\n                    classes['d-none'] = true;\n                    classes[`d-${this.contentVisibleUp}-block`] = true;\n                }\n                return classes;\n            }\n        }\n    };\n</script>\n","const isArray =\n    typeof Array.isArray === \"function\"\n        ? Array.isArray\n        : obj => Object.prototype.toString.call(obj) === \"[object Array]\"\n\nexport default isArray\n","import isArray from \"../utils/isArray\"\n/**\n * Issue #569: collapse::toggle::state triggered too many times\n * @link https://github.com/bootstrap-vue/bootstrap-vue/issues/569\n */\nexport default {\n    methods: {\n        /**\n         * Safely register event listeners on the root Vue node.\n         * While Vue automatically removes listeners for individual components,\n         * when a component registers a listener on root and is destroyed,\n         * this orphans a callback because the node is gone,\n         * but the root does not clear the callback.\n         *\n         * This adds a non-reactive prop to a vm on the fly\n         * in order to avoid object observation and its performance costs\n         * to something that needs no reactivity.\n         * It should be highly unlikely there are any naming collisions.\n         * @param {string} event\n         * @param {function} callback\n         * @chainable\n         */\n        listenOnRoot(event, callback) {\n            if (!this.__bv_root_listeners || !isArray(this.__bv_root_listeners)) {\n                this.__bv_root_listeners = []\n            }\n            this.__bv_root_listeners.push({ event, callback })\n            this.$root.$on(event, callback)\n\n            return this\n        },\n\n        /**\n         * Convenience method for calling vm.$emit on vm.$root.\n         * @param {string} event\n         * @param {*} args\n         * @chainable\n         */\n        emitOnRoot(event, ...args) {\n            this.$root.$emit(event, ...args)\n\n            return this\n        }\n    },\n\n    destroyed() {\n        if (this.__bv_root_listeners && isArray(this.__bv_root_listeners)) {\n            while (this.__bv_root_listeners.length > 0) {\n                // shift to process in order\n                const { event, callback } = this.__bv_root_listeners.shift()\n                this.$root.$off(event, callback)\n            }\n        }\n    }\n}\n","<template>\n    <transition\n            @enter=\"enter\"\n            @after-enter=\"clearHeight\"\n            @leave=\"leave\"\n            @after-leave=\"clearHeight\"\n            name=\"collapse\"\n    >\n        <div :id=\"id || null\" :class=\"classObject\" v-show=\"show\">\n            <slot></slot>\n        </div>\n    </transition>\n</template>\n\n<style scoped>\n    .collapse-enter-active, .collapse-leave-active {\n        transition: all .35s ease;\n        overflow: hidden;\n    }\n</style>\n\n<script>\n    import listenOnRoot from '../mixins/listen-on-root';\n\n    export default {\n        mixins: [listenOnRoot],\n        data() {\n            return {\n                show: this.visible\n            };\n        },\n        computed: {\n            classObject() {\n                return {\n                    'navbar-collapse': this.isNav,\n                    show: this.show\n                };\n            }\n        },\n        model: {\n            prop: 'visible',\n            event: 'input'\n        },\n        watch: {\n            visible(newVal) {\n                if (newVal !== this.show) {\n                    this.show = newVal;\n                    this.emitState();\n                }\n            },\n        },\n        props: {\n            isNav: {\n                type: Boolean,\n                default: false\n            },\n            id: {\n                type: String,\n                required: true\n            },\n            accordion: { \n                type: String,\n                default: null\n            },\n            visible: {\n                type: Boolean,\n                default: false\n            }\n        },\n        methods: {\n            toggle() {\n                this.show = !this.show;\n                this.emitState();\n            },\n            enter(el) {\n                el.style.height = 'auto';\n                const realHeight = getComputedStyle(el).height;\n                el.style.height = '0px';\n\n                /* eslint-disable no-unused-expressions */\n                el.offsetHeight; // Force repaint\n\n                el.style.height = realHeight;\n            },\n            leave(el) {\n                el.style.height = 'auto';\n                const realHeight = getComputedStyle(el).height;\n                el.style.height = realHeight;\n\n                /* eslint-disable no-unused-expressions */\n                el.offsetHeight; // Force repaint\n\n                el.style.height = '0px';\n            },\n            clearHeight(el) {\n                el.style.height = null;\n            },\n            emitState() {\n                this.$emit('input', this.show);\n                this.$root.$emit('collapse::toggle::state', this.id, this.show);\n                if (this.accordion && this.show) {\n                    // Tell the other collapses in this accordion to close\n                    this.$root.$emit('accordion::toggle', this.id, this.accordion);\n                }\n            },\n            handleToggleEvt(target) {\n                if (target !== this.id) {\n                    return;\n                }\n                this.toggle();\n            },\n            handleAccordionEvt(openedId, accordion) {\n                if (!this.accordion || accordion !== this.accordion) {\n                    return;\n                }\n                if (openedId === this.id) {\n                    if (!this.show) {\n                        this.toggle();\n                    }\n                } else {\n                    if (this.show) {\n                        this.toggle();\n                    }\n                }\n            }\n        },\n        created() {\n            this.listenOnRoot('collapse::toggle', this.handleToggleEvt);\n            this.listenOnRoot('accordion::toggle', this.handleAccordionEvt);\n        },\n        mounted() {\n            this.emitState();\n        }\n    };\n\n</script>\n","export default {\n    mounted() {\n        if (typeof document !== 'undefined') {\n            document.documentElement.addEventListener('click', this._clickOutListener);\n        }\n    },\n    destroyed() {\n        if (typeof document !== 'undefined') {\n            document.removeEventListener('click', this._clickOutListener);\n        }\n    },\n    methods: {\n        _clickOutListener(e) {\n            if (!this.$el.contains(e.target)) {\n                if (this.clickOutListener) {\n                    this.clickOutListener();\n                }\n            }\n        }\n    }\n};\n","<template>\n    <div :id=\"id || null\" :class=\"['dropdown', 'btn-group', {dropup, show: visible}]\">\n\n        <b-button :class=\"{'dropdown-toggle': !split}\"\n                  ref=\"button\"\n                  :id=\"id ? (id + '__BV_button_') : null\"\n                  :aria-haspopup=\"split ? null : 'true'\"\n                  :aria-expanded=\"split ? null : (visible ? 'true' : 'false')\"\n                  :variant=\"variant\"\n                  :size=\"size\"\n                  :disabled=\"disabled\"\n                  @click.stop.prevent=\"click\"\n        >\n            <slot name=\"button-content\"><slot name=\"text\">{{text}}</slot></slot>\n        </b-button>\n\n        <b-button :class=\"['dropdown-toggle','dropdown-toggle-split']\"\n                  v-if=\"split\"\n                  ref=\"toggle\"\n                  :id=\"id ? (id + '__BV_toggle_') : null\"\n                  :aria-haspopup=\"split ? 'true' : null\"\n                  :aria-expanded=\"split ? (visible ? 'true' : 'false') : null\"\n                  :variant=\"variant\"\n                  :size=\"size\"\n                  :disabled=\"disabled\"\n                  @click.stop.prevent=\"toggle\"\n        >\n            <span class=\"sr-only\">{{toggleText}}</span>\n        </b-button>\n\n        <div :class=\"['dropdown-menu',{'dropdown-menu-right': right}]\"\n             ref=\"menu\"\n             role=\"menu\"\n             :aria-labelledby=\"id ? (id + (split ? '__BV_toggle_' : '__BV_button_')) : null\"\n             @keyup.esc=\"onEsc\"\n             @keydown.tab=\"onTab\"\n             @keydown.up=\"focusNext($event,true)\"\n             @keydown.down=\"focusNext($event,false)\"\n             @mouseover=\"focusHovered($event)\"\n        >\n            <slot></slot>\n        </div>\n\n    </div>\n</template>\n\n<script>\n    import dropdown from '../mixins/dropdown';\n    import bButton from './button.vue';\n\n    export default {\n        mixins: [dropdown],\n        components: {bButton},\n        props: {\n            split: {\n                type: Boolean,\n                default: false\n            },\n            toggleText: {\n                type: String,\n                default: 'Toggle Dropdown'\n            },\n            size: {\n                type: String,\n                default: null\n            },\n            variant: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n    <b-link class=\"dropdown-item\"\n            role=\"menuitem\"\n            v-bind=\"linkProps\"\n            @click=\"$emit('click', $event)\">\n        <slot></slot>\n    </b-link>\n</template>\n\n<script>\nimport { props, computed } from '../mixins/link';\nimport bLink from './link.vue';\n\nexport default {\n    components: { bLink },\n    props,\n    computed: {\n        linkProps: computed.linkProps\n    }\n};\n</script>\n","<template>\n    <button class=\"dropdown-item\"\n            type=\"button\"\n            role=\"menuitem\"\n            :disabled=\"disabled\"\n            @click=\"onClick\">\n        <slot></slot>\n    </button>\n</template>\n\n<script>\nexport default {\n    props: {\n        disabled: {\n            type: Boolean,\n            default: false\n        }\n    },\n    methods: {\n        onClick(e) {\n            this.$root.$emit(\"clicked::link\", this);\n            this.$emit(\"click\", e);\n        },\n    }\n};\n</script>\n","<template>\n    <div role=\"separator\" class=\"dropdown-divider\"></div>\n</template>\n\n<script>\n    export default {\n        props: {}\n    };\n</script>\n","<template>\n    <component :is=\"tag\" tabindex=\"-1\" class=\"dropdown-header\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n    export default {\n        props: {\n            tag: {\n                type: String,\n                default: 'h6'\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"dropdown-select\" :class=\"{open: show, dropdown: !dropup, dropup: dropup}\">\n        <button\n                :id=\"id\"\n                :class=\"['btn','dropdown',dropdownToggle,btnVariant,btnSize]\"\n                role=\"button\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"show\"\n                @click.prevent=\"toggle($event)\"\n                :disabled=\"disabled\">\n            <span class=\"checked-items\" v-html=\"displayItem\"></span>\n        </button>\n        <ul class=\"dropdown-menu\" :class=\"{'dropdown-menu-right' : position == 'right'}\" aria-labelledby=\"dLabel\">\n            <li v-for=\"item in list\">\n                <button class=\"dropdown-item\" :click.stop.prevent=\"select(item)\">{{item.text}}</button>\n            </li>\n        </ul>\n    </div>\n</template>\n\n\n<script>\n    export default {\n        data() {\n            return {\n                show: false,\n                selected: false\n            };\n        },\n        computed: {\n            btnVariant() {\n                return !this.variant || this.variant === `default` ? `btn-secondary` : `btn-${this.variant}`;\n            },\n            btnSize() {\n                return !this.size || this.size === `default` ? `` : `btn-${this.size}`;\n            },\n            dropdownToggle() {\n                return this.caret ? 'dropdown-toggle' : '';\n            },\n            displayItem() {\n                // If zero show default message\n                if ((this.returnObject && this.model && !this.model.text) || (!this.returnObject && this.model && this.model.length === 0) || this.forceDefault) {\n                    return this.defaultText;\n                }\n\n                // Show selected item\n                if (this.returnObject && this.model && this.model.text) {\n                    return this.model.text;\n                }\n\n                // Show text that coresponds to the model value\n                if (!this.returnObject && this.model) {\n                    let result = this.model || '';\n                    this.list.forEach(function (item) {\n                        if (item.value === this.model) {\n                            result = item.text;\n                        }\n                    });\n                    return result;\n                }\n\n                return '';\n            }\n        },\n        props: {\n            id: {\n                type: String\n            },\n            model: {\n                required: false\n            },\n            list: {\n                type: Array,\n                default: [],\n                required: true\n            },\n            caret: {\n                type: Boolean,\n                default: true\n            },\n            position: {\n                type: String,\n                default: 'left'\n            },\n            size: {\n                type: String,\n                default: ''\n            },\n            variant: {\n                type: String,\n                default: 'default'\n            },\n            defaultText: {\n                type: String,\n                default: 'Plase select one'\n            },\n            forceDefault: {\n                type: Boolean,\n                default: false\n            },\n            returnObject: {\n                type: Boolean,\n                default: false\n            },\n            dropup: {\n                type: Boolean,\n                default: false\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            }\n        },\n        methods: {\n            toggle(e) {\n                // Hide an alert\n                this.show = !this.show;\n                // Dispatch an event from the current vm that propagates all the way up to its $root\n                if (this.show) {\n                    this.$root.$emit('shown:dropdown', this.id);\n                    e.stopPropagation();\n                } else {\n                    this.$root.$emit('hidden::dropdown', this.id);\n                }\n            },\n            select(item) {\n                // We need to set empty model to make model watchers react to it\n                if (this.returnObject) {\n                    this.model = item;\n                } else {\n                    this.model = item.value;\n                }\n                this.show = false;\n                // Dispatch an event from the current vm that propagates all the way up to its $root\n                this.$root.$emit('selected::dropdown', this.id, this.model);\n            }\n        },\n        created() {\n            const hub = this.$root;\n            hub.$on('hide::dropdown', function () {\n                this.show = false;\n            });\n        }\n    };\n</script>\n","<template>\n    <form :class=\"classObject\" @submit=\"$emit('submit',$event)\">\n        <slot></slot>\n    </form>\n</template>\n\n<script>\nexport default {\n    computed: {\n        classObject() {\n            return [\n                this.inline ? 'form-inline' : ''\n            ];\n        }\n    },\n    props: {\n        inline: {\n            type: Boolean,\n            default: false\n        }\n    }\n};\n\n</script>\n","<template>\n    <div :class=\"['form-group','row',inputState]\"\n         :id=\"id || null\"\n         role=\"group\"\n         :aria-describedby=\"describedBy\"\n    >\n        <label v-if=\"label || $slots['label']\"\n               :for=\"target\"\n               :id=\"labelId\"\n               :class=\"[labelSrOnly ? 'sr-only' : 'col-form-label',labelLayout,labelAlignClass]\"\n        >\n            <slot name=\"label\"><span v-html=\"label\"></span></slot>\n        </label>\n        <div :class=\"inputLayout\" ref=\"content\">\n            <slot></slot>\n            <div v-if=\"feedback || $slots['feedback']\"\n                 class=\"form-text form-control-feedback\"\n                 :id=\"feedbackId\"\n                 role=\"alert\"\n                 aria-live=\"assertive\"\n                 aria-atomic=\"true\"\n            >\n                <slot name=\"feedback\"><span v-html=\"feedback\"></span></slot>\n            </div>\n            <small v-if=\"description || $slots['description']\"\n                   class=\"form-text text-muted\"\n                   :id=\"descriptionId\"\n            >\n                <slot name=\"description\"><span v-html=\"description\"></span></slot>\n            </small>\n        </div>\n    </div>\n</template>\n\n<script>\n    import warn from '../utils/warn';\n\n    export default {\n        data() {\n            return {\n                target: null\n            };\n        },\n        computed: {\n            labelId() {\n                return (this.id && this.label) ? (this.id + '__BV_label_') : null;\n            },\n            descriptionId() {\n                return (this.id && this.description) ? (this.id + '__BV_description_') : null;\n            },\n            feedbackId() {\n                return (this.id && this.feedback) ? (this.id + '__BV_feedback_') : null;\n            },\n            describedBy() {\n                if (this.id && (this.label || this.feedback || this.description)) {\n                    return [\n                        this.labelId,\n                        this.descriptionId,\n                        this.feedbackId\n                    ].filter(i => i).join(' ');\n                }\n                return null;\n            },\n            inputState() {\n                return this.state ? `has-${this.state}` : '';\n            },\n            computedLabelCols() {\n                if (this.labelSize) {\n                    warn('b-form-fieldset: prop label-size has been deprecated. Use label-cols instead');\n                    return this.labelSize;\n                }\n                return this.labelCols;\n            },\n            labelLayout() {\n                if (this.labelSrOnly) {\n                    return null;\n                }\n                return this.horizontal ? ('col-sm-' + this.computedLabelCols) : 'col-12';\n            },\n            labelAlignClass() {\n                if (this.labelSrOnly) {\n                    return null;\n                }\n                return this.labelTextAlign ? `text-${this.labelTextAlign}` : null;\n            },\n            inputLayout() {\n                return this.horizontal ? ('col-sm-' + (12 - this.computedLabelCols)) : 'col-12';\n            }\n        },\n        methods: {\n            updateTarget() {\n                if (this.for && this.$el && this.$el.querySelector('#' + this.for)) {\n                    return this.for;\n                }\n                const content = this.$refs.content;\n                if (!content) {\n                    return null;\n                }\n                const input = content.querySelector(this.inputSelector);\n                this.target = (input && input.id) ? input.id : null;\n            }\n        },\n        mounted() {\n            this.updateTarget();\n        },\n        updated() {\n            this.updateTarget();\n        },\n        props: {\n            id: {\n                type: String,\n                default: null\n            },\n            for: {\n                type: String,\n                default: null\n            },\n            state: {\n                type: String,\n                default: null\n            },\n            horizontal: {\n                type: Boolean,\n                default: false\n            },\n            labelCols: {\n                type: Number,\n                default: 3,\n                validator(value) {\n                    if (value >= 1 && value <= 11) {\n                        return true;\n                    }\n                    warn('b-form-fieldset: label-cols must be a value between 1 and 11');\n                    return false;\n                }\n            },\n            labelSize: {\n                type: Number\n            },\n            labelTextAlign: {\n                type: String,\n                default: null\n            },\n            label: {\n                type: String,\n                default: null\n            },\n            labelSrOnly: {\n                type: Boolean,\n                default: false\n            },\n            description: {\n                type: String,\n                default: null\n            },\n            feedback: {\n                type: String,\n                default: null\n            },\n            inputSelector: {\n                type: String,\n                default: '[role=\"radiogroup\"],input,select,textarea,.form-control,.form-control-static,.dropdown,.dropup'\n            }\n        }\n    };\n</script>\n","export default {\n    props: {\n        name: {\n            type: String\n        },\n        id: {\n            type: String\n        },\n        disabled: {\n            type: Boolean\n        },\n        required: {\n            type: Boolean,\n            default: false\n        }\n    }\n};\n\n","export default {\n    computed: {\n        custom() {\n            return !this.plain;\n        }\n    },\n    props: {\n        plain: {\n            type: Boolean,\n            default: false\n        }\n    }\n};\n","export default {\n    computed: {\n        checkboxClass() {\n            return {\n                'custom-control': this.custom,\n                'form-check-inline': this.inline\n            };\n        }\n    }\n};\n\n","<template>\n    <label :class=\"[inputClass,checkboxClass]\">\n        <input type=\"checkbox\"\n               :id=\"id || null\"\n               :name=\"name\"\n               :value=\"value\"\n               :disabled=\"disabled\"\n               :required=\"required\"\n               autocomplete=\"off\"\n               :aria-required=\"required ? 'true' : null\"\n               :class=\"[custom?'custom-control-input':null]\"\n               :checked=\"isChecked\"\n               @change=\"handleChange\">\n        <span class=\"custom-control-indicator\"\n              aria-hidden=\"true\"\n              v-if=\"custom\"></span>\n        <span :class=\"custom ? 'custom-control-description' : null\">\n            <slot></slot>\n        </span>\n    </label>\n</template>\n\n<script>\nimport formMixin from '../mixins/form';\nimport formCustomMixin from '../mixins/form-custom';\nimport formCheckBoxMixin from '../mixins/form-checkbox';\nimport arrayIncludes from '../utils/arrayIncludes';\nimport isArray from '../utils/isArray';\n\n\nexport default {\n    mixins: [formMixin, formCustomMixin, formCheckBoxMixin],\n    model: {\n        prop: 'checked',\n        event: 'change'\n    },\n    props: {\n        value: {\n            default: true\n        },\n        uncheckedValue: {\n            default: false\n        },\n        checked: {\n            default: true\n        },\n        size: {\n            type: String,\n            default: null\n        }\n    },\n    computed: {\n        inputClass() {\n            return [\n                this.size ? `form-control-${this.size}` : null,\n                this.custom ? 'custom-checkbox' : null\n            ];\n        },\n        isChecked() {\n            if (isArray(this.checked)) {\n                return arrayIncludes(this.checked, this.value);\n            } else {\n                return this.checked === this.value;\n            }\n        }\n    },\n    methods: {\n        handleChange({ target: { checked } }) {\n            if (isArray(this.checked)) {\n                if (this.isChecked) {\n                    this.$emit('change', this.checked.filter(x => x !== this.value));\n                } else {\n                    this.$emit('change', [...this.checked, this.value]);\n                }\n            } else {\n                this.$emit('change', checked ? this.value : this.uncheckedValue)\n            }\n        }\n    }\n};\n\n</script>\n","import isArray from '../utils/isArray';\n\nexport default {\n    computed: {\n        formOptions() {\n            let options = this.options || {};\n\n            if (isArray(options)) {\n                // Normalize flat arrays to object Array\n                options = options.map(option => {\n                    if (typeof option === 'object') {\n                        return {\n                            value: option[this.valueField],\n                            text: option[this.textField],\n                            disabled: option.disabled || false\n                        };\n                    }\n\n                    return {text: String(option), value: option || {}};\n                });\n            } else {\n                // Normalize Objects keys to Array\n                options = Object.keys(options).map(value => {\n                    let option = options[value] || {};\n\n                    // Resolve text\n                    if (typeof option !== 'object') {\n                        option = {text: String(option)};\n                    }\n\n                    // Resolve value (uses key as value if not provided)\n                    option.value = option[this.valueField] || value;\n                    \n                    // Resolve text field (uses key as value if not provided)\n                    option.text = option[this.textField] || value;\n\n                    return option;\n                });\n            }\n\n            return options;\n        },\n        selectedValue() {\n            const formOptions = this.formOptions;\n            for (let i = 0; i < formOptions.length; i++) {\n                if (formOptions[i].value === this.localValue) {\n                    if (this.returnObject) {\n                        return formOptions[i];\n                    }\n                    return formOptions[i].value;\n                }\n            }\n        }\n    },\n    props: {\n        valueField: {\n            type: [String],\n            default: 'value'\n        },\n        textField: {\n            type: [String],\n            default: 'text'\n        }\n    },\n    watch: {\n        localValue(value, old_value) {\n            if (value === old_value) {\n                return;\n            }\n            this.$emit('input', this.selectedValue);\n        },\n        value(value, old_value) {\n            if (value === old_value) {\n                return;\n            }\n            this.localValue = value;\n        }\n    }\n};\n","<template>\n    <div :id=\"id || null\"\n         :class=\"inputClass\"\n         role=\"radiogroup\"\n         :aria-required=\"required ? 'true' : null\"\n         :aria-invalid=\"ariaInvalid\"\n    >\n        <label :class=\"[checkboxClass, custom?'custom-radio':null]\"\n               v-for=\"option in formOptions\"\n        >\n            <input :id=\"option.id || null\"\n                   :class=\"custom?'custom-control-input':null\"\n                   ref=\"inputs\"\n                   type=\"radio\"\n                   autocomplete=\"off\"\n                   v-model=\"localValue\"\n                   :value=\"option.value\"\n                   :name=\"name\"\n                   :required=\"name && required\"\n                   :disabled=\"option.disabled || disabled\"\n                   @change=\"$emit('change', returnObject ? option : option.value)\"\n            >\n            <span v-if=\"custom\" class=\"custom-control-indicator\" aria-hidden=\"true\"></span>\n            <span :class=\"custom?'custom-control-description':null\" v-html=\"option.text\"></span>\n        </label>\n    </div>\n</template>\n\n<script>\n    import formOptionsMixin from '../mixins/form-options';\n    import formMixin from '../mixins/form';\n    import formCustomMixin from '../mixins/form-custom';\n    import formCheckBoxMixin from '../mixins/form-checkbox';\n\n    export default {\n        mixins: [formMixin, formCustomMixin, formCheckBoxMixin, formOptionsMixin],\n        data() {\n            return {\n                localValue: this.value\n            };\n        },\n        computed: {\n            inputClass() {\n                return [\n                    this.size ? `form-control-${this.size}` : null,\n                    this.state ? `has-${this.state}` : '',\n                    this.stacked ? 'custom-controls-stacked' : ''\n                 ];\n            },\n            ariaInvalid() {\n                if (this.invalid === true || this.invalid === 'true') {\n                    return 'true';\n                }\n                return null;\n            }\n        },\n        props: {\n            value: {},\n            options: {\n                type: [Array, Object],\n                default: null,\n                required: true\n            },\n            size: {\n                type: String,\n                default: null\n            },\n            state: {\n                type: String,\n                default: null\n            },\n            invalid: {\n                type: [Boolean, String],\n                default: false\n            },\n            stacked: {\n                type: Boolean,\n                default: false\n            },\n            returnObject: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n\n</script>\n","<template>\n    <p :id=\"id || null\"\n       :class=\"inputClass\"\n       v-html=\"staticValue\"\n    >\n        <slot></slot>\n    </p>\n</template>\n\n<script>\n    export default {\n        computed: {\n            staticValue() {\n                return this.formatter ? this.formatter(this.value) : this.value;\n            },\n            inputClass() {\n                return [\n                    'form-control-static',\n                    this.size ? `form-control-${this.size}` : null,\n                    this.state ? `form-control-${this.state}` : null\n                ];\n            }\n        },\n        props: {\n            id: {\n                type: String,\n                default: null\n            },\n            value: {\n                default: null\n            },\n            formatter: {\n                type: Function\n            },\n            size: {\n                type: String,\n                default: null\n            },\n            state: {\n                type: String,\n                default: null\n            }\n        }\n    };\n\n</script>\n","<template>\n    <input v-if=\"!static\"\n           ref=\"input\"\n           :type=\"textarea ? null : type\"\n           :value=\"value\"\n           :name=\"name\"\n           :id=\"id || null\"\n           :disabled=\"disabled\"\n           :required=\"required\"\n           :aria-required=\"required ? 'true' : null\"\n           :aria-invalid=\"ariaInvalid\"\n           :readonly=\"readonly\"\n           :is=\"textarea ? 'textarea' : 'input'\"\n           :class=\"inputClass\"\n           :rows=\"textarea ? (rows || rowsCount) : null\"\n           :placeholder=\"placeholder\"\n           @input=\"onInput($event.target.value)\"\n           @change=\"onChange($event.target.value)\"\n           @keyup=\"onKeyUp($event)\"\n           @focus=\"$emit('focus')\"\n           @blur=\"$emit('blur')\"\n    />\n    <b-form-input-static v-else\n                         :id=\"id || null\"\n                         :value=\"value\"\n                         :size=\"size\"\n                         :state=\"state\"\n                         :formatter=\"formatter\"\n    ></b-form-input-static>\n</template>\n\n<script>\n    import formMixin from '../mixins/form';\n    import bFormInputStatic from './form-input-static.vue';\n\n    export default {\n        mixins: [formMixin],\n        components: {bFormInputStatic},\n        computed: {\n            rowsCount() {\n                return (this.value || '').toString().split('\\n').length;\n            },\n            inputClass() {\n                return [\n                    'form-control',\n                    this.size ? `form-control-${this.size}` : null,\n                    this.state ? `form-control-${this.state}` : null\n                ];\n            },\n            ariaInvalid() {\n                if (this.invalid === false) {\n                    return null;\n                }\n                if (this.invalid === true) {\n                    return 'true';\n                }\n                return this.invalid;\n            }\n        },\n        methods: {\n            format(value) {\n                if (this.formatter) {\n                    const formattedValue = this.formatter(value);\n                    if (formattedValue !== value) {\n                        value = formattedValue;\n                        this.$refs.input.value = formattedValue;\n                    }\n                }\n                return value;\n            },\n            onInput(value) {\n                if (!this.lazyFormatter) {\n                    value = this.format(value);\n                }\n                this.$emit('input', value);\n            },\n            onChange(value) {\n                value = this.format(value);\n                this.$emit('input', value);\n                this.$emit('change', value);\n            },\n            onKeyUp(e) {\n                this.$emit('keyup', e);\n            },\n            focus() {\n                this.$refs.input.focus();\n            }\n        },\n        props: {\n            value: {\n                default: null\n            },\n            type: {\n                type: String,\n                default: 'text'\n            },\n            size: {\n                type: String,\n                default: null\n            },\n            state: {\n                type: String,\n                default: null\n            },\n            invalid: {\n                type: [Boolean, String],\n                default: false\n            },\n            readonly: {\n                type: Boolean,\n                default: false\n            },\n            static: {\n                type: Boolean,\n                default: false\n            },\n            placeholder: {\n                type: String,\n                default: null\n            },\n            rows: {\n                type: Number,\n                default: null\n            },\n            textarea: {\n                type: Boolean,\n                default: false\n            },\n            formatter: {\n                type: Function\n            },\n            lazyFormatter: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n\n</script>\n","<template>\n    <div :class=\"custom?'custom-file':null\"\n         :id=\"id ? (id + '__BV_file_outer_') : null\"\n         @dragover.stop.prevent=\"dragover\"\n    >\n\n        <!-- Drop Here Target -->\n        <span class=\"drop-here\"\n              v-if=\"dragging && custom\"\n              @dragover.stop.prevent=\"dragover\"\n              @drop.stop.prevent=\"drop\"\n              @dragleave.stop.prevent=\"dragging=false\"\n              :data-drop=\"dropLabel\"\n        ></span>\n\n        <!-- Real Form input -->\n        <input type=\"file\"\n               ref=\"input\"\n               :class=\"custom ? 'custom-file-input' : ''\"\n               :name=\"name\"\n               :id=\"id || null\"\n               :disabled=\"disabled\"\n               :required=\"required\"\n               :aria-required=\"required ? 'true' : null\"\n               :accept=\"accept || null\"\n               :multiple=\"multiple\"\n               :webkitdirectory=\"directory\"\n               :aria-describedby=\"(custom && id) ? (id + '__BV_file_control_') : null\"\n               @change=\"onFileChange\"\n        >\n\n        <!-- Overlay Labels -->\n        <span :class=\"['custom-file-control',dragging?'dragging':null]\"\n              :id=\"id ? (id + '__BV_file_control_') : null\"\n              :data-choose=\"computedChooseLabel\"\n              :data-selected=\"selectedLabel\"\n              v-if=\"custom\"\n        ></span>\n\n    </div>\n</template>\n\n<style scoped>\n    .custom-file-control {\n        overflow: hidden;\n    }\n\n    .custom-file-control {\n        overflow: hidden;\n    }\n\n    .custom-file-control.dragging {\n        overflow: hidden;\n        filter: blur(3px);\n    }\n\n    .custom-file-control::after {\n        content: attr(data-selected);\n    }\n\n    .custom-file-control::before {\n        content: attr(data-choose);\n    }\n\n    .custom-file .drop-here {\n        position: absolute;\n        left: 0;\n        right: 0;\n        top: 0;\n        bottom: 0;\n        background-color: rgba(0, 0, 0, .5);\n        border-radius: 3px;\n        z-index: 99999;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    .custom-file .drop-here::before {\n        color: white;\n        content: attr(data-drop);\n    }\n\n</style>\n\n<script>\n    import formMixin from '../mixins/form';\n    import formCustomMixin from '../mixins/form-custom';\n\n    export default {\n        mixins: [formMixin, formCustomMixin],\n        data() {\n            return {\n                selectedFile: null,\n                dragging: false\n            };\n        },\n        computed: {\n            selectedLabel() {\n                if (!this.selectedFile || this.selectedFile.length === 0) {\n                    return this.placeholder || 'No file chosen';\n                }\n\n                if (this.multiple) {\n                    if (this.selectedFile.length === 1) {\n                        return this.selectedFile[0].name;\n                    }\n\n                    return this.selectedFormat\n                        .replace(':names', this.selectedFile.map(file => file.name).join(','))\n                        .replace(':count', this.selectedFile.length);\n                }\n\n                return this.selectedFile.name;\n            },\n            computedChooseLabel() {\n                return this.chooseLabel || (this.multiple ? 'Choose Files' : 'Choose File');\n            }\n        },\n        watch: {\n            selectedFile(newVal, oldVal) {\n                if (newVal === oldVal) {\n                    return;\n                }\n\n                if (!newVal && this.multiple) {\n                    this.$emit('input', []);\n                } else {\n                    this.$emit('input', newVal);\n                }\n            }\n        },\n        methods: {\n            reset() {\n                try {\n                    // Wrapped in try in case IE < 11 craps out\n                    this.$refs.input.value = '';\n                } catch (e) {\n                }\n\n                // IE < 11 doesn't support setting input.value to '' or null\n                // So we use this little extra hack to reset the value, just in case\n                // This also appears to work on modern browsers as well.\n                this.$refs.input.type = '';\n                this.$refs.input.type = 'file';\n\n                this.selectedFile = this.multiple ? [] : null;\n            },\n            onFileChange(e) {\n                // Always emit original event\n                this.$emit('change', e);\n\n                // Check if special `items` prop is available on event (drop mode)\n                // Can be disabled by setting no-traverse\n                const items = e.dataTransfer && e.dataTransfer.items;\n                if (items && !this.noTraverse) {\n                    const queue = [];\n                    for (let i = 0; i < items.length; i++) {\n                        const item = items[i].webkitGetAsEntry();\n                        if (item) {\n                            queue.push(this.traverseFileTree(item));\n                        }\n                    }\n                    Promise.all(queue).then(filesArr => {\n                        this.setFiles(Array.prototype.concat.apply([], filesArr));\n                    });\n                    return;\n                }\n\n                // Normal handling\n                this.setFiles(e.target.files || e.dataTransfer.files);\n            },\n            setFiles(files) {\n                if (!files) {\n                    this.selectedFile = null;\n                    return;\n                }\n\n                if (!this.multiple) {\n                    this.selectedFile = files[0];\n                    return;\n                }\n\n                // Convert files to array\n                const filesArray = [];\n                for (let i = 0; i < files.length; i++) {\n                    if (files[i].type.match(this.accept)) {\n                        filesArray.push(files[i]);\n                    }\n                }\n\n                this.selectedFile = filesArray;\n            },\n            dragover(e) {\n                if (this.noDrop || !this.custom) {\n                    return;\n                }\n\n                this.dragging = true;\n                e.dataTransfer.dropEffect = 'copy';\n            },\n            drop(e) {\n                if (this.noDrop) {\n                    return;\n                }\n\n                this.dragging = false;\n                if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n                    this.onFileChange(e);\n                }\n            },\n            traverseFileTree(item, path) {\n                // Based on http://stackoverflow.com/questions/3590058\n                return new Promise(resolve => {\n                    path = path || '';\n                    if (item.isFile) {\n                        // Get file\n                        item.file(file => {\n                            file.$path = path; // Inject $path to file obj\n                            resolve(file);\n                        });\n                    } else if (item.isDirectory) {\n                        // Get folder contents\n                        item.createReader().readEntries(entries => {\n                            const queue = [];\n                            for (let i = 0; i < entries.length; i++) {\n                                queue.push(this.traverseFileTree(entries[i], path + item.name + '/'));\n                            }\n                            Promise.all(queue).then(filesArr => {\n                                resolve(Array.prototype.concat.apply([], filesArr));\n                            });\n                        });\n                    }\n                });\n            }\n        },\n        props: {\n            accept: {\n                type: String,\n                default: ''\n            },\n            placeholder: {\n                type: String,\n                default: null\n            },\n            chooseLabel: {\n                type: String,\n                default: null\n            },\n            multiple: {\n                type: Boolean,\n                default: false\n            },\n            directory: {\n                type: Boolean,\n                default: false\n            },\n            noTraverse: {\n                type: Boolean,\n                default: false\n            },\n            selectedFormat: {\n                type: String,\n                default: ':count Files'\n            },\n            noDrop: {\n                type: Boolean,\n                default: false\n            },\n            dropLabel: {\n                type: String,\n                default: 'Drop files here'\n            }\n        }\n    };\n</script>\n","<template>\n    <select :class=\"inputClass\"\n            :name=\"name\"\n            :id=\"id || null\"\n            v-model=\"localValue\"\n            :disabled=\"disabled\"\n            :required=\"required\"\n            :aria-required=\"required ? 'true' : null\"\n            :aria-invalid=\"ariaInvalid\"\n            ref=\"input\"\n    >\n        <option v-for=\"option in formOptions\"\n                :value=\"option.value\"\n                v-html=\"option.text\"\n                :disabled=\"option.disabled\"\n        ></option>\n    </select>\n</template>\n\n<script>\n    import formOptions from '../mixins/form-options';\n    import formMixin from '../mixins/form';\n    import formCustomMixin from '../mixins/form-custom';\n\n    export default {\n        mixins: [formMixin, formCustomMixin, formOptions],\n        data() {\n            return {\n                localValue: this.value\n            };\n        },\n        computed: {\n            inputClass() {\n                return [\n                    'form-control',\n                    this.size ? `form-control-${this.size}` : null,\n                    this.custom ? 'custom-select' : null\n                ];\n            },\n            ariaInvalid() {\n                if (this.invalid === true || this.invalid === 'true') {\n                    return 'true';\n                }\n                return null;\n            }\n        },\n        props: {\n            value: {},\n            invalid: {\n                type: [Boolean, String],\n                default: false\n            },\n            size: {\n                type: String,\n                default: null\n            },\n            options: {\n                type: [Array, Object],\n                required: true\n            },\n            returnObject: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n\n</script>\n","<template>\n    <div :class=\"['jumbotron',fluid?'jumbotron-fluid':null]\">\n        <div :class=\"containerFluid ? 'container-fluid' : 'container'\">\n            <h1 v-if=\"header\" class=\"display-3\" v-html=\"header\"></h1>\n            <p v-if=\"lead\" class=\"lead\" v-html=\"lead\"></p>\n            <slot></slot>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {},\n        props: {\n            fluid: {\n                type: Boolean,\n                default: false\n            },\n            containerFluid: {\n                type: Boolean,\n                default: false\n            },\n            header: {\n                type: String,\n                default: null\n            },\n            lead: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n<span :class=\"['badge',badgeVariant,badgePill]\">\n\t<slot></slot>\n</span>\n</template>\n\n<script>\n    export default {\n        computed: {\n            badgeVariant() {\n                return !this.variant || this.variant === `default` ? `badge-default` : `badge-${this.variant}`;\n            },\n            badgePill() {\n                return this.pill ? 'badge-pill' : '';\n            }\n        },\n        props: {\n            variant: {\n                type: String,\n                default: 'default'\n            },\n            pill: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"tag\" :class=\"['list-group',flush?'list-group-flush':null]\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n    export default {\n        props: {\n            tag: {\n                type: String,\n                default: 'div'\n            },\n            flush: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"myTag\"\n               :class=\"classObject\"\n               ref=\"item\"\n               v-bind=\"conditionalLinkProps\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\nimport bLink from './link.vue';\nimport { props as originalLinkProps, computed, omitLinkProps } from '../mixins/link';\nimport arrayIncludes from '../utils/arrayIncludes';\n// copy link props, but exclude defaults for 'href', 'to', & 'tag'\n// to ensure proper component tag computation\nconst linkProps = Object.assign(omitLinkProps('href', 'to'), {\n    href: { type: originalLinkProps.href.type },\n    to: { type: originalLinkProps.to.type },\n    tag: { type: originalLinkProps.tag.type }\n});\n\nconst actionTags = ['a', 'router-link', 'button', 'b-link'];\n\nexport default {\n    components: { bLink },\n\n    computed: {\n        linkProps: computed.linkProps,\n\n        classObject() {\n            return [\n                'list-group-item',\n                this.listState,\n                this.active ? 'active' : null,\n                this.disabled ? 'disabled' : null,\n                this.isAction ? 'list-group-item-action' : null\n            ];\n        },\n\n        isAction() {\n            if (this.action === false) {\n                return false;\n            }\n\n            // this previously could return a string,\n            // coercing to a boolean for more consistent expected value\n            return !!(this.action || this.to || this.href || arrayIncludes(actionTags, this.tag));\n        },\n\n        listState() {\n            return this.variant ? `list-group-item-${this.variant}` : null;\n        },\n\n        myTag() {\n            if (this.tag) {\n                return this.tag;\n            }\n\n            return (this.to || this.href) ? 'b-link' : 'div';\n        },\n\n        conditionalLinkProps() {\n            return this.myTag !== 'b-link' ? {} : this.linkProps;\n        }\n    },\n\n    // merge the link props with list-group-item props\n    props: Object.assign(linkProps, {\n        action: {\n            type: Boolean,\n            default: null\n        },\n\n        variant: {\n            type: String,\n            default: null\n        },\n    })\n};\n</script>\n","<template>\n    <div class=\"media\">\n        <div :class=\"['d-flex','mr-3',verticalAlignClass]\"  v-if=\"!rightAlign\">\n            <slot name=\"aside\"></slot>\n        </div>\n        <div class=\"media-body\">\n            <slot></slot>\n        </div>\n        <div :class=\"['d-flex','ml-3',verticalAlignClass]\" v-if=\"rightAlign\">\n            <slot name=\"aside\"></slot>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {\n            verticalAlignClass() {\n                return `align-self-${this.verticalAlign}`;\n            }\n        },\n        props: {\n            rightAlign: {\n                type: Boolean,\n                default: false\n            },\n            verticalAlign: {\n                type: String,\n                default: 'top'\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"type\" :class=\"classObject\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n\nexport default {\n    computed: {\n        classObject() {\n            return {\n                nav: true,\n                'navbar-nav': this.isNavBar,\n                'nav-tabs': this.tabs,\n                'nav-pills': this.pills,\n                'flex-column': this.vertical,\n                'nav-fill': this.fill,\n                'nav-justified': this.justified\n            };\n        }\n    },\n    props: {\n        type: {\n            type: String,\n            default: 'ul'\n        },\n        fill: {\n            type: Boolean,\n            default: false\n        },\n        justified: {\n            type: Boolean,\n            default: false\n        },\n        tabs: {\n            type: Boolean,\n            default: false\n        },\n        pills: {\n            type: Boolean,\n            default: false\n        },\n        vertical: {\n            type: Boolean,\n            default: false\n        },\n        isNavBar: {\n            type: Boolean,\n            default: false\n        }\n    }\n};\n\n</script>\n","<template>\n    <li class=\"nav-item\">\n        <b-link class=\"nav-link\"\n                v-bind=\"linkProps\"\n                @click=\"$emit('click', $event)\">\n            <slot></slot>\n        </b-link>\n    </li>\n</template>\n\n<script>\nimport { props as linkProps, computed } from '../mixins/link';\nimport bLink from './link.vue';\n\nexport default {\n    components: { bLink },\n    props: linkProps,\n    computed: {\n        linkProps: computed.linkProps\n    }\n};\n</script>\n","<template>\n    <li :id=\"id || null\" :class=\"['nav-item','dropdown', {dropup, show: visible}]\">\n\n        <a :class=\"['nav-link', dropdownToggle, {disabled}]\"\n           href=\"#\"\n           ref=\"button\"\n           :id=\"id ? (id + '__BV_button_') : null\"\n           aria-haspopup=\"true\"\n           :aria-expanded=\"visible ? 'true' : 'false'\"\n           :disabled=\"disabled\"\n           @click.stop.prevent=\"toggle($event)\"\n           @keydown.enter.stop.prevent=\"toggle($event)\"\n           @keydown.space.stop.prevent=\"toggle($event)\"\n        >\n            <slot name=\"button-content\"><slot name=\"text\"><span v-html=\"text\"></span></slot></slot>\n        </a>\n\n        <div :class=\"['dropdown-menu',{'dropdown-menu-right': right}]\"\n             role=\"menu\"\n             ref=\"menu\"\n             :aria-labelledby=\"id ? (id + '__BV_button_') : null\"\n             @keyup.esc=\"onEsc\"\n             @keydown.tab=\"onTab\"\n             @keydown.up=\"focusNext($event,true)\"\n             @keydown.down=\"focusNext($event,false)\"\n             @mouseover=\"focusHovered($event)\"\n        >\n            <slot></slot>\n        </div>\n\n    </li>\n</template>\n\n<script>\n    import dropdown from '../mixins/dropdown';\n\n    export default {\n        mixins: [dropdown],\n        computed: {\n            dropdownToggle() {\n                return this.noCaret ? '' : 'dropdown-toggle';\n            }\n        },\n        props: {\n            noCaret: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <button :class=\"classObject\"\n            type=\"button\"\n            :aria-label=\"label\"\n            :aria-controls=\"target.id ? target.id : target\"\n            :aria-expanded=\"toggleState ? 'true' : 'false'\"\n            @click=\"onclick\"\n    >\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n</template>\n\n<script>\nimport listenOnRoot from '../mixins/listen-on-root';\n\nexport default {\n    mixins: [listenOnRoot],\n    computed: {\n        classObject() {\n            return [\n                'navbar-toggler',\n                'navbar-toggler-' + this.position\n            ];\n        }\n    },\n    data() {\n        return {\n            toggleState: false\n        };\n    },\n    props: {\n        label: {\n            type: String,\n            default: 'Toggle navigation'\n        },\n        position: {\n            type: String,\n            default: 'right'\n        },\n        target: {\n            required: true\n        }\n    },\n    methods: {\n        onclick() {\n            const target = this.target;\n            if (target.toggle) {\n                target.toggle();\n            }\n            this.$root.$emit('collapse::toggle', this.target);\n        },\n        handleStateEvt(target, state) {\n            if (target === this.target || target === this.target.id) {\n                this.toggleState = state;\n            }\n        }\n    },\n    created() {\n        this.listenOnRoot('collapse::toggle::state', this.handleStateEvt);\n    }\n};\n</script>\n","<template>\n    <nav :class=\"classObject\">\n        <slot></slot>\n    </nav>\n</template>\n\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'navbar',\n                    this.type ? `navbar-${this.type}` : null,\n                    this.variant ? `bg-${this.variant}` : null,\n                    this.fixed ? `fixed-${this.fixed}` : null,\n                    this.sticky ? 'sticky-top' : null,\n                    this.toggleable ? this.toggleableClass : null\n                ];\n            },\n            toggleableClass() {\n                let className = 'navbar-toggleable';\n\n                if (this.toggleBreakpoint) {\n                    className += `-${this.toggleBreakpoint}`;\n                }\n\n                return className;\n            }\n        },\n        props: {\n            type: {\n                type: String,\n                default: 'light'\n            },\n            variant: {\n                type: String\n            },\n            toggleable: {\n                type: Boolean,\n                default: false\n            },\n            toggleBreakpoint: {\n                type: String,\n                default: null\n            },\n            fixed: {\n                type: String\n            },\n            sticky: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <span class=\"navbar-text\">\n        <slot></slot>\n    </span>\n</template>\n\n<script>\n    export default {\n        props: {}\n    };\n</script>\n","<template>\n    <b-form :id=\"id || null\" inline>\n        <slot></slot>\n    </b-form>\n</template>\n\n<script>\n    import bForm from './form.vue';\n    \n    export default {\n        components: [bForm],\n        props: {\n            id: {\n                type: String,\n            }\n        }\n    };\n</script>\n","import Tether from 'tether';\nimport isArray from '../utils/isArray';\n// Controls which events are mapped for each named trigger, and the expected popover behavior for each.\nconst TRIGGER_LISTENERS = {\n    click: {click: 'toggle'},\n    hover: {mouseenter: 'show', mouseleave: 'hide'},\n    focus: {focus: 'show', blur: 'hide'}\n};\nconst PLACEMENT_PARAMS = {\n    top: 'bottom center',\n    bottom: 'top center',\n    left: 'middle right',\n    right: 'middle left'\n};\nconst TETHER_CLASS_PREFIX = 'bs-tether';\nconst TETHER_CLASSES = {\n    element: false,\n    enabled: false\n};\nconst TRANSITION_DURATION = 150;\n\nexport default {\n    props: {\n        constraints: {\n            type: Array,\n            default() {\n                return [];\n            }\n        },\n        debounce: {\n            type: [Number],\n            default: 300,\n            validator(value) {\n                return value >= 0;\n            }\n        },\n        delay: {\n            type: [Number, Object],\n            default: 0,\n            validator(value) {\n                if (typeof value === 'number') {\n                    return value >= 0;\n                } else if (value !== null && typeof value === 'object') {\n                    return typeof value.show === 'number' &&\n                        typeof value.hide === 'number' &&\n                        value.show >= 0 &&\n                        value.hide >= 0;\n                }\n                return false;\n            }\n        },\n        offset: {\n            type: String,\n            default: '0 0',\n            validator(value) {\n                // Regex test for a pair of units, either 0 exactly, px, or percentage\n                return /^((0\\s?)|([+-]?[0-9]+(px|%)\\s?)){2}$/.test(value);\n            }\n        },\n        placement: {\n            type: String,\n            default: 'top',\n            validator(value) {\n                return Object.keys(PLACEMENT_PARAMS).indexOf(value) !== -1;\n            }\n        },\n        popoverStyle: {\n            type: Object,\n            default: null\n        },\n        show: {\n            type: Boolean,\n            default: null\n        },\n        targetOffset: {\n            type: String,\n            default: '0 0',\n            validator(value) {\n                // Regex test for a pair of units, either 0 exactly, px, or percentage\n                return /^((0\\s?)|([+-]?[0-9]+(px|%)\\s?)){2}$/.test(value);\n            }\n        },\n        triggers: {\n            type: [Boolean, String, Array],\n            default: () => ['click', 'focus'],\n            validator(value) {\n                // Allow falsy value to disable all event triggers (equivalent to 'manual') in Bootstrap 4\n                if (value === false || value === '') {\n                    return true;\n                } else if (typeof value === 'string') {\n                    return Object.keys(TRIGGER_LISTENERS).indexOf(value) !== -1;\n                } else if (isArray(value)) {\n                    const keys = Object.keys(TRIGGER_LISTENERS);\n                    value.forEach(item => {\n                        if (keys.indexOf(item) === -1) {\n                            return false;\n                        }\n                    });\n                    return true;\n                }\n                return false;\n            }\n        }\n    },\n    data() {\n        return {\n            triggerState: this.show,\n            classState: this.show,\n            lastEvent: null\n        };\n    },\n    computed: {\n        /**\n         * Arrange event trigger hooks as array for all input types.\n         *\n         * @return Array\n         */\n        normalizedTriggers() {\n            if (this.triggers === false) {\n                return [];\n            } else if (typeof this.triggers === 'string') {\n                return [this.triggers];\n            }\n            return this.triggers;\n        },\n        /**\n         * Class property to be used for Popover rendering\n         *\n         * @return String\n         */\n        popoverAlignment() {\n            return !this.placement || this.placement === `default` ? `popover-top` : `popover-${this.placement}`;\n        },\n        /**\n         * Determine if the Popover should be shown.\n         *\n         * @return Boolean\n         */\n        showState() {\n            return this.show !== false && (this.triggerState || this.show);\n        }\n    },\n    watch: {\n        /**\n         * Refresh Tether display properties\n         */\n        constraints() {\n            this.setOptions();\n        },\n        /**\n         * Refresh Popover event triggers\n         * @param {Array} newTriggers\n         * @param {Array} oldTriggers\n         */\n        normalizedTriggers(newTriggers, oldTriggers) {\n            this.updateListeners(newTriggers, oldTriggers);\n        },\n        /**\n         * Refresh Tether display properties\n         */\n        offset() {\n            this.setOptions();\n        },\n        /**\n         * Refresh Tether display properties\n         */\n        placement() {\n            this.setOptions();\n        },\n        /**\n         * Affect 'show' state in response to status change\n         * @param  {Boolean} val\n         */\n        showState(val) {\n            const delay = this.getDelay(val);\n            clearTimeout(this.$data._timeout);\n            if (delay) {\n                this.$data._timeout = setTimeout(() => this.togglePopover(val), delay);\n            } else {\n                this.togglePopover(val);\n            }\n        }\n    },\n    methods: {\n        /**\n         * Add all event hooks for the given trigger\n         * @param {String} trigger\n         */\n        addListener(trigger) {\n            // eslint-disable-next-line guard-for-in\n            for (const item in TRIGGER_LISTENERS[trigger]) {\n                this.$data._trigger.addEventListener(item, e => this.eventHandler(e));\n            }\n        },\n        /**\n         * Tidy removal of Tether object from the DOM\n         */\n        destroyTether() {\n            if (this.$data._tether && !this.showState) {\n                this.$data._tether.destroy();\n                this.$data._tether = null;\n                const regx = new RegExp('(^|[^-]\\\\b)(' + TETHER_CLASS_PREFIX + '\\\\S*)', 'g');\n                this.$data._trigger.className = this.$data._trigger.className.replace(regx, '');\n            }\n        },\n        /**\n         * Handle multiple event triggers\n         * @param  {Object} e\n         */\n        eventHandler(e) {\n            // If this event is right after a previous successful event, ignore it (debounce)\n            if (this.normalizedTriggers.length > 1 && this.debounce > 0 && this.lastEvent !== null && e.timeStamp <= this.lastEvent + this.debounce) {\n                return;\n            }\n            // Look up the expected popover action for the event\n            // eslint-disable-next-line guard-for-in\n            for (const trigger in TRIGGER_LISTENERS) {\n                for (const event in TRIGGER_LISTENERS[trigger]) {\n                    if (event === e.type) {\n                        const action = TRIGGER_LISTENERS[trigger][event];\n                        // If the expected event action is the opposite of the current state, allow it\n                        if (action === 'toggle' || (this.triggerState && action === 'hide') || (!this.triggerState && action === 'show')) {\n                            this.triggerState = !this.triggerState;\n                            this.lastEvent = e.timeStamp;\n                        }\n                        return;\n                    }\n                }\n            }\n        },\n        /**\n         * Get the currently applicable popover delay\n         *\n         * @returns Number\n         */\n        getDelay(state) {\n            if (typeof this.delay === 'object') {\n                return state ? this.delay.show : this.delay.hide;\n            }\n            return this.delay;\n        },\n        /**\n         * Tether construct params for each show event.\n         *\n         * @return Object\n         */\n        getTetherOptions() {\n            return {\n                attachment: PLACEMENT_PARAMS[this.placement],\n                element: this.$data._popover,\n                target: this.$data._trigger,\n                classes: TETHER_CLASSES,\n                classPrefix: TETHER_CLASS_PREFIX,\n                offset: this.offset,\n                constraints: this.constraints,\n                targetOffset: this.targetOffset\n            };\n        },\n        /**\n         * Hide popover and fire event\n         */\n        hidePopover() {\n            this.classState = false;\n            clearTimeout(this.$data._timeout);\n            this.$data._timeout = setTimeout(() => {\n                this.$data._popover.style.display = 'none';\n                this.destroyTether();\n            }, TRANSITION_DURATION);\n        },\n        /**\n         * Refresh the Popover position in order to respond to changes\n         */\n        refreshPosition() {\n            if (this.$data._tether) {\n                this.$nextTick(() => {\n                    this.$data._tether.position();\n                });\n            }\n        },\n        /**\n         * Remove all event hooks for the given trigger\n         * @param {String} trigger\n         */\n        removeListener(trigger) {\n            // eslint-disable-next-line guard-for-in\n            for (const item in TRIGGER_LISTENERS[trigger]) {\n                this.$data._trigger.removeEventListener(item, e => this.eventHandler(e));\n            }\n        },\n        /**\n         * Update tether options\n         */\n        setOptions() {\n            if (this.$data._tether) {\n                this.$data._tether.setOptions(this.getTetherOptions());\n            }\n        },\n        /**\n         * Display popover and fire event\n         */\n        showPopover() {\n            clearTimeout(this.$data._timeout);\n            if (!this.$data._tether) {\n                this.$data._tether = new Tether(this.getTetherOptions());\n            }\n            this.$data._popover.style.display = 'block';\n            // Make sure the popup is rendered in the correct location\n            this.refreshPosition();\n            this.$nextTick(() => {\n                this.classState = true;\n            });\n        },\n        /**\n         * Handle Popover show or hide instruction\n         */\n        togglePopover(newShowState) {\n            this.$emit('showChange', newShowState);\n            if (newShowState) {\n                this.showPopover();\n                this.$root.$emit('shown::popover');\n            } else {\n                this.hidePopover();\n                this.$root.$emit('hidden::popover');\n            }\n        },\n        /**\n         * Study the 'triggers' component property and apply all selected triggers\n         * @param {Array} triggers\n         * @param {Array} appliedTriggers\n         */\n        updateListeners(triggers, appliedTriggers = []) {\n            const newTriggers = [];\n            const removeTriggers = [];\n            // Look for new events not yet mapped (all of them on first load)\n            triggers.forEach(item => {\n                if (appliedTriggers.indexOf(item) === -1) {\n                    newTriggers.push(item);\n                }\n            });\n            // Disable any removed event triggers\n            appliedTriggers.forEach(item => {\n                if (triggers.indexOf(item) === -1) {\n                    removeTriggers.push(item);\n                }\n            });\n            // Apply trigger mapping changes\n            newTriggers.forEach(item => this.addListener(item));\n            removeTriggers.forEach(item => this.removeListener(item));\n        }\n    },\n    created() {\n        this.$root.$on('hide::popover', () => {\n            this.triggerState = false;\n        });\n    },\n    mounted() {\n        // Configure tether\n        this.$data._trigger = this.$refs.trigger.children[0] || this.$refs.trigger;\n        this.$data._popover = this.$refs.popover;\n        this.$data._popover.style.display = 'none';\n        this.$data._tether = new Tether(this.getTetherOptions());\n        this.$data._timeout = 0;\n        // Add listeners for specified triggers and complementary click event\n        this.updateListeners(this.normalizedTriggers);\n        // Display popover if prop is set on load\n        if (this.showState) {\n            this.showPopover();\n        }\n    },\n    updated() {\n        this.refreshPosition();\n    },\n    beforeDestroy() {\n        this.normalizedTriggers.forEach(item => this.removeListener(item));\n        clearTimeout(this.$data._timeout);\n        this.destroyTether();\n    },\n    destroyed() {\n        // Tether is moving the popover element outside of Vue's control and leaking dom nodes\n        if (this.$data._popover.parentElement === document.body) {\n            document.body.removeChild(this.$data._popover);\n        }\n    }\n};\n","<template>\n    <div>\n        <span ref=\"trigger\"><slot></slot></span>\n        <div :class=\"['popover', 'fade', classState ? 'show' : '', popoverAlignment]\"\n             :style=\"popoverStyle\"\n             tabindex=\"-1\"\n             ref=\"popover\"\n             @focus=\"$emit('focus')\"\n             @blur=\"$emit('blur')\"\n        >\n            <div class=\"popover-arrow\"></div>\n            <h3 class=\"popover-title\" v-if=\"title\" v-html=\"title\"></h3>\n            <div class=\"popover-content\">\n                <div class=\"popover-content-wrapper\">\n                    <slot name=\"content\"><span v-html=\"content\"></span></slot>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import popover from '../mixins/popover';\n\n    export default {\n        mixins: [popover],\n        props: {\n            title: {\n                type: String,\n                default: ''\n            },\n            content: {\n                type: String,\n                default: ''\n            },\n            popoverStyle: {\n                type: Object,\n                default: null\n            }\n        }\n    };\n\n</script>\n","<template>\n    <div class=\"progress\">\n        <transition>\n            <div role=\"progressbar\"\n                 :class=\"classObject\"\n                 :aria-valuenow=\"value\"\n                 :aria-valuemin=\"0\"\n                 :aria-valuemax=\"max\"\n                 :style=\"styleObject\"\n            >\n                <slot>\n                    <template v-if=\"showProgress\">{{progress}}%</template>\n                    <template v-else-if=\"showValue\">{{value}}</template>\n                </slot>\n            </div>\n        </transition>\n    </div>\n</template>\n\n<style>\n    .progress-bar {\n        transition: all .5s;\n    }\n</style>\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'progress-bar',\n                    this.progressVariant,\n                    (this.striped || this.animated) ? 'progress-bar-striped' : '',\n                    this.animated ? 'progress-bar-animated' : ''\n                ];\n            },\n            styleObject() {\n                return {\n                    width: this.progress + '%'\n                };\n            },\n            progressVariant() {\n                return this.variant ? `bg-${this.variant}` : null;\n            },\n            progress() {\n                const p = Math.pow(10, this.precision);\n                return Math.round((100 * p * this.value) / this.max) / p;\n            }\n        },\n        props: {\n            striped: {\n                type: Boolean,\n                default: false\n            },\n            animated: {\n                type: Boolean,\n                default: false\n            },\n            precision: {\n                type: Number,\n                default: 0\n            },\n            value: {\n                type: Number,\n                default: 0\n            },\n            max: {\n                type: Number,\n                default: 100\n            },\n            variant: {\n                type: String,\n                default: null\n            },\n            showProgress: {\n                type: Boolean,\n                default: false\n            },\n            showValue: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <table :id=\"id || null\"\n           role=\"grid\"\n           :aria-busy=\"busy ? 'true' : 'false'\"\n           :class=\"tableClass\"\n    >\n        <thead :class=\"headClass\">\n            <tr role=\"row\">\n                <th v-for=\"(field,key) in fields\"\n                    @click.stop.prevent=\"headClicked($event,field,key)\"\n                    @keydown.enter.stop.prevent=\"headClicked($event,field,key)\"\n                    @keydown.space.stop.prevent=\"headClicked($event,field,key)\"\n                    :key=\"key\"\n                    :class=\"fieldClass(field,key)\"\n                    :style=\"field.thStyle || {}\"\n                    :aria-label=\"field.sortable ? ((sortDesc && sortBy === key) ? labelSortAsc : labelSortDesc) : null\"\n                    :aria-sort=\"(field.sortable && sortBy === key) ? (sortDesc ? 'descending' : 'ascending') : null\"\n                    :tabindex=\"field.sortable?'0':null\"\n                >\n                  <slot :name=\"'HEAD_'+key\" :label=\"field.label\" :column=\"key\" :field=\"field\">\n                    <div v-html=\"field.label\"></div>\n                  </slot>\n                </th>\n            </tr>\n        </thead>\n        <tfoot v-if=\"footClone\" :class=\"footClass\">\n            <tr role=\"row\">\n                <th v-for=\"(field,key) in fields\"\n                    @click.stop.prevent=\"headClicked($event,field,key)\"\n                    @keydown.enter.stop.prevent=\"headClicked($event,field,key)\"\n                    @keydown.space.stop.prevent=\"headClicked($event,field,key)\"\n                    :key=\"key\"\n                    :class=\"fieldClass(field,key)\"\n                    :style=\"field.thStyle || {}\"\n                    :aria-label=\"field.sortable ? ((sortDesc && sortBy === key) ? labelSortAsc : labelSortDesc) : null\"\n                    :aria-sort=\"(field.sortable && sortBy === key) ? (sortDesc ? 'descending' : 'ascending') : null\"\n                    :tabindex=\"field.sortable?'0':null\"\n                >\n                  <slot v-if=\"$scopedSlots['FOOT_'+key]\" :name=\"'FOOT_'+key\" :label=\"field.label\" :column=\"key\" :field=\"field\">\n                    <div v-html=\"field.label\"></div>\n                  </slot>\n                  <slot v-else :name=\"'HEAD_'+key\" :label=\"field.label\" :column=\"key\" :field=\"field\">\n                    <div v-html=\"field.label\"></div>\n                  </slot>\n                </th>\n            </tr>\n        </tfoot>\n        <tbody>\n            <tr v-for=\"(item,index) in _items\"\n                role=\"row\"\n                :key=\"index\"\n                :class=\"rowClass(item)\"\n                @click=\"rowClicked($event,item,index)\"\n                @hover=\"rowHovered($event,item,index)\"\n            >\n                <td v-for=\"(field,key) in fields\" :key=\"key\" :class=\"tdClass(field, item, key)\">\n                    <slot :name=\"key\" :value=\"item[key]\" :item=\"item\" :index=\"index\">{{item[key]}}</slot>\n                </td>\n            </tr>\n            <tr v-if=\"showEmpty && (!_items  || _items.length === 0)\" role=\"row\">\n                <td :colspan=\"Object.keys(fields).length\">\n                    <div v-if=\"filter\" role=\"alert\" aria-live=\"polite\">\n                        <slot name=\"emptyfiltered\">\n                            <div class=\"text-center my-2\" v-html=\"emptyFilteredText\"></div>\n                        </slot>\n                    </div>\n                    <div v-else role=\"alert\" aria-live=\"polite\">\n                        <slot name=\"empty\">\n                            <div class=\"text-center my-2\" v-html=\"emptyText\"></div>\n                        </slot>\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</template>\n\n<script>\n    import warn from '../utils/warn';\n\n    const toString = v => {\n        if (!v) {\n            return '';\n        }\n        if (v instanceof Object) {\n            return Object.keys(v).map(k => toString(v[k])).join(' ');\n        }\n        return String(v);\n    };\n\n    const recToString = (obj) => {\n        if (!(obj instanceof Object)) {\n            return '';\n        }\n\n        // Exclude these fields from record stringification\n        const exclude = { state: true, _rowVariant: true };\n\n        return toString(Object.keys(obj).reduce((o, k) => {\n          if (!exclude[k]) {\n            o[k] = obj[k];\n          }\n          return o;\n        }, {}));\n    };\n\n    const defaultSortCompare = (a, b, sortBy) => {\n        if (typeof a[sortBy] === 'number' && typeof b[sortBy] === 'number') {\n            if (a[sortBy] < b[sortBy]) {\n                return -1;\n            } else if (a[sortBy] > b[sortBy]) {\n                return 1;\n            }\n            return 0;\n        } else {\n            return toString(a[sortBy]).localeCompare(toString(b[sortBy]), undefined, {\n                numeric: true\n            });\n        }\n    };\n\n    export default {\n        data() {\n            return {\n                sortBy: null,\n                sortDesc: true,\n                localItems: []\n            };\n        },\n        props: {\n            id: {\n                type: String,\n                default: ''\n            },\n            items: {\n                type: [Array, Function],\n                default() {\n                    if (this && this.itemsProvider) {\n                        // Deprecate itemsProvider\n                        warn('b-table: prop items-provider has been deprecated. Pass a function to items instead');\n                        return this.itemsProvider;\n                    }\n                    return [];\n                }\n            },\n            fields: {\n                type: Object,\n                default: {}\n            },\n            striped: {\n                type: Boolean,\n                default: false\n            },\n            bordered: {\n                type: Boolean,\n                default: false\n            },\n            inverse: {\n                type: Boolean,\n                default: false\n            },\n            hover: {\n                type: Boolean,\n                default: false\n            },\n            small: {\n                type: Boolean,\n                default: false\n            },\n            responsive: {\n                type: Boolean,\n                default: false\n            },\n            headVariant: {\n                type: String,\n                default: ''\n            },\n            footVariant: {\n                type: String,\n                default: ''\n            },\n            perPage: {\n                type: Number,\n                default: null\n            },\n            currentPage: {\n                type: Number,\n                default: 1\n            },\n            filter: {\n                type: [String, RegExp, Function],\n                default: null\n            },\n            sortCompare: {\n                type: Function,\n                default: null\n            },\n            itemsProvider: {\n                // Deprecated in favour of items\n                type: Function,\n                default: null\n            },\n            noProviderPaging: {\n                type: Boolean,\n                default: false\n            },\n            noProviderSorting: {\n                type: Boolean,\n                default: false\n            },\n            noProviderFiltering: {\n                type: Boolean,\n                default: false\n            },\n            busy: {\n                type: Boolean,\n                default: false\n            },\n            value: {\n                type: Array,\n                default: () => []\n            },\n            footClone: {\n                type: Boolean,\n                default: false\n            },\n            labelSortAsc: {\n                type: String,\n                default: 'Click to sort Ascending'\n            },\n            labelSortDesc: {\n                type: String,\n                default: 'Click to sort Descending'\n            },\n            showEmpty: {\n                type: Boolean,\n                default: false\n            },\n            emptyText: {\n                type: String,\n                default: 'There are no records to show'\n            },\n            emptyFilteredText: {\n                type: String,\n                default: 'There are no records matching your request'\n            }\n        },\n        watch: {\n            items(newVal, oldVal) {\n                if (oldVal !== newVal) {\n                    this._providerUpdate();\n                }\n            },\n            sortDesc(newVal, oldVal) {\n                if (oldVal !== newVal && !this.noProviderSorting) {\n                    this._providerUpdate();\n                }\n            },\n            sortBy(newVal, oldVal) {\n                if (oldVal !== newVal && !this.noProviderSorting) {\n                    this._providerUpdate();\n                }\n            },\n            perPage(newVal, oldVal) {\n                if (oldVal !== newVal && !this.noProviderPaging) {\n                    this._providerUpdate();\n                }\n            },\n            currentPage(newVal, oldVal) {\n                if (oldVal !== newVal && !this.noProviderPaging) {\n                    this._providerUpdate();\n                }\n            },\n            filter(newVal, oldVal) {\n                if (oldVal !== newVal && !this.noProviderFiltering) {\n                    this._providerUpdate();\n                }\n            }\n        },\n        mounted() {\n            if (this.hasProvider) {\n                this._providerUpdate();\n            }\n            this.$root.$on('table::refresh', (id) => {\n                if (id === this.id) {\n                    this._providerUpdate();\n                }\n            });\n        },\n        computed: {\n            tableClass() {\n                return [\n                    'table',\n                    'b-table',\n                    this.striped ? 'table-striped' : '',\n                    this.hover ? 'table-hover' : '',\n                    this.inverse ? 'table-inverse' : '',\n                    this.bordered ? 'table-bordered' : '',\n                    this.responsive ? 'table-responsive' : '',\n                    this.small ? 'table-sm' : ''\n                ];\n            },\n            headClass() {\n                return this.headVariant ? 'thead-' + this.headVariant : '';\n            },\n            footClass() {\n                const variant = this.footVariant || this.headVariant || null;\n                return variant ? 'thead-' + variant : '';\n            },\n            hasProvider() {\n                return this.items instanceof Function;\n            },\n            providerFiltering() {\n                return Boolean(this.hasProvider && !this.noProviderFiltering);\n            },\n            providerSorting() {\n                return Boolean(this.hasProvider && !this.noProviderSorting);\n            },\n            providerPaging() {\n                return Boolean(this.hasProvider && !this.noProviderPaging);\n            },\n            context() {\n                return {\n                    perPage: this.perPage,\n                    currentPage: this.currentPage,\n                    filter: this.filter,\n                    sortBy: this.sortBy,\n                    sortDesc: this.sortDesc\n                };\n            },\n            _items() {\n                // Grab some props/data to ensure reactivity\n                const perPage = this.perPage;\n                const currentPage = this.currentPage;\n                const filter = this.filter;\n                const sortBy = this.sortBy;\n                const sortDesc = this.sortDesc;\n                const sortCompare = this.sortCompare || defaultSortCompare;\n\n                let items = this.hasProvider ? this.localItems : this.items;\n\n                if (!items) {\n                    this.$nextTick(this._providerUpdate);\n                    return [];\n                }\n\n                items = items.slice();\n\n                // Apply local filter\n                if (filter && !this.providerFiltering) {\n                    if (filter instanceof Function) {\n                        items = items.filter(filter);\n                    } else {\n                        let regex;\n                        if (filter instanceof RegExp) {\n                            regex = filter;\n                        } else {\n                            regex = new RegExp('.*' + filter + '.*', 'ig');\n                        }\n                        items = items.filter(item => {\n                            const test = regex.test(recToString(item));\n                            regex.lastIndex = 0;\n                            return test;\n                        });\n                    }\n                }\n\n                // Apply local Sort\n                if (this.sortBy && !this.providerSorting) {\n                    items = items.sort((a, b) => {\n                        const r = sortCompare(a, b, this.sortBy);\n                        return this.sortDesc ? r : r * -1;\n                    });\n                }\n\n                // Apply local pagination\n                if (perPage && !this.providerPaging) {\n                    items = items.slice((currentPage - 1) * perPage, currentPage * perPage);\n                }\n\n                // Update the value model with the filtered/sorted/paginated data set\n                this.$emit('input', items);\n                return items;\n            }\n        },\n        methods: {\n            fieldClass(field, key) {\n                return [\n                    field.sortable ? 'sorting' : '',\n                    (field.sortable && this.sortBy === key) ? 'sorting_' + (this.sortDesc ? 'desc' : 'asc') : '',\n                    field.variant ? ('table-' + field.variant) : '',\n                    field.class ? field.class : '',\n                    field.thClass ? field.thClass : ''\n                ];\n            },\n            tdClass(field, item, key) {\n                let cellVariant = '';\n                if (item._cellVariants && item._cellVariants[key]) {\n                    cellVariant = (this.inverse ? 'bg-' : 'table-') + item._cellVariants[key];\n                }\n                return [\n                    (field.variant && !cellVariant) ? ((this.inverse ? 'bg-' : 'table-') + field.variant) : '',\n                    cellVariant,\n                    field.class ? field.class : '',\n                    field.tdClass ? field.tdClass : ''\n                ];\n            },\n            rowClass(item) {\n                // Prefer item._rowVariant over deprecated item.state\n                const variant = item._rowVariant || item.state || null;\n                return [\n                    variant ? ((this.inverse ? 'bg-' : 'table-') + variant) : ''\n                ];\n            },\n            rowClicked(e, item, index) {\n                if (this.busy) {\n                    // If table is busy (via provider) then don't propagate\n                    e.preventDefault();\n                    e.stopPropagation();\n                    return;\n                }\n                this.$emit('row-clicked', item, index);\n            },\n            rowHovered(e, item, index) {\n                if (this.busy) {\n                    // If table is busy (via provider) then don't propagate\n                    e.preventDefault();\n                    e.stopPropagation();\n                    return;\n                }\n                this.$emit('row-hovered', item, index);\n            },\n            headClicked(e, field, key) {\n                if (this.busy) {\n                    // If table is busy (via provider) then don't propagate\n                    e.preventDefault();\n                    e.stopPropagation();\n                    return;\n                }\n                let sortChanged = false;\n                if (!field.sortable) {\n                    if (this.sortBy) {\n                        this.sortBy = null;\n                        sortChanged = true;\n                    }\n                } else {\n                    if (key === this.sortBy) {\n                        // Change sorting direction on column\n                        this.sortDesc = !this.sortDesc;\n                    } else {\n                        // Start sorting this column descending\n                        this.sortBy = key;\n                        this.sortDesc = true;\n                    }\n                    sortChanged = true;\n                }\n                this.$emit('head-clicked', key, field);\n                if (sortChanged) {\n                    // Sorting parameters changed\n                    this.$emit('sort-changed', this.context);\n                }\n            },\n            refresh() {\n                // Expose refresh method\n                if (this.hasProvider) {\n                    this._providerUpdate();\n                }\n            },\n            _providerSetLocal(items) {\n                this.localItems = (items && items.length > 0) ? items.slice() : [];\n                this.$emit('refreshed');\n                this.$root.$emit('table::refreshed', this.id);\n            },\n            _providerUpdate() {\n                // Refresh the provider items\n                if (this.busy || !this.hasProvider) {\n                    // Don't refresh remote data if we are 'busy' or if no provider\n                    return;\n                }\n\n                // Call provider function with context and optional callback\n                const data = this.items(this.context, this._providerSetLocal);\n\n                if (!data) {\n                    // Provider is using callback\n                    return;\n                }\n\n                if (data.then && typeof data.then === 'function') {\n                    // Provider returned Promise\n                    data.then((items) => {\n                        this._providerSetLocal(items);\n                    });\n                } else {\n                    // Provider returned Array data\n                    this._providerSetLocal(data);\n                }\n            }\n        }\n    };\n</script>\n\n<style>\n    /* Based on https://cdn.datatables.net/1.10.13/css/dataTables.bootstrap4.css */\n\n    table.b-table > thead > tr > .sorting,\n    table.b-table > tfoot > tr > .sorting {\n        padding-right: 30px;\n        cursor: pointer;\n        position: relative;\n    }\n\n    table.b-table thead > tr > .sorting:before,\n    table.b-table thead > tr > .sorting:after,\n    table.b-table tfoot > tr > .sorting:before,\n    table.b-table thead > tr > .sorting:after {\n        position: absolute;\n        bottom: 0.9em;\n        display: block;\n        opacity: 0.3;\n    }\n\n    table.b-table.table-sm > thead > tr > .sorting:before,\n    table.b-table.table-sm > thead > tr > .sorting:after,\n    table.b-table.table-sm > tfoot > tr > .sorting:before,\n    table.b-table.table-sm > thead > tr > .sorting:after {\n        bottom: 0.45em;\n    }\n\n    table.b-table > thead > tr > .sorting:before,\n    table.b-table > tfoot > tr > .sorting:before {\n        right: 1em;\n        content: \"\\2191\";\n    }\n\n    table.b-table > thead > tr > .sorting:after,\n    table.b-table > tfoot > tr > .sorting:after {\n        right: 0.5em;\n        content: \"\\2193\";\n    }\n\n    table.b-table > thead > tr > .sorting_asc:before,\n    table.b-table > thead > tr > .sorting_desc:after,\n    table.b-table > tfoot > tr > .sorting_asc:before,\n    table.b-table > tfoot > tr > .sorting_desc:after {\n        opacity: 1;\n    }\n\n    /* Busy table styling */\n\n    table.b-table[aria-busy=\"false\"] {\n        opacity: 1;\n    }\n\n    table.b-table[aria-busy=\"true\"] {\n        opacity: .6;\n    }\n</style>\n","<template>\n    <component :is=\"tag\" :id=\"id || null\" class=\"tabs\">\n        <div v-if=\"bottom\" :class=\"['tab-content',{'card-block': card}]\" ref=\"tabsContainer\">\n            <slot></slot>\n            <slot name=\"empty\" v-if=\"!tabs || !tabs.length\"></slot>\n        </div>\n\n        <div :class=\"{'card-header': card}\">\n            <ul :class=\"['nav','nav-' + navStyle, card ? 'card-header-'+navStyle : null]\"\n                role=\"tablist\"\n                tabindex=\"0\"\n                :aria-setsize=\"tabs.length\"\n                :aria-posinset=\"currentTab + 1\"\n                @keydown.left=\"previousTab\"\n                @keydown.up=\"previousTab\"\n                @keydown.right=\"nextTab\"\n                @keydown.down=\"nextTab\"\n                @keydown.shift.left=\"setTab(-1,false,1)\"\n                @keydown.shift.up=\"setTab(-1,false,1)\"\n                @keydown.shift.right=\"setTab(tabs.length,false,-1)\"\n                @keydown.shift.down=\"setTab(tabs.length,false,-1)\"\n            >\n                <li class=\"nav-item\" v-for=\"(tab, index) in tabs\" role=\"presentation\">\n                    <a :class=\"['nav-link',{small: small, active: tab.localActive, disabled: tab.disabled}]\"\n                       :href=\"tab.href\"\n                       role=\"tab\"\n                       :aria-selected=\"tab.localActive ? 'true' : 'false'\"\n                       :aria-controls=\"tab.id || null\"\n                       :id=\"tab.controlledBy || null\"\n                       @click.prevent.stop=\"setTab(index)\"\n                       @keydown.space.prevent.stop=\"setTab(index)\"\n                       @keydown.enter.prevent.stop=\"setTab(index)\"\n                       tabindex=\"-1\"\n                       v-if=\"!tab.headHtml\"\n                       v-html=\"tab.title\"\n                    ></a>\n                    <div :class=\"['tab-head',{small: small, active: tab.localActive, disabled: tab.disabled}]\"\n                         role=\"heading\"\n                         tabindex=\"-1\"\n                         v-else\n                         v-html=\"tab.headHtml\"></div>\n                </li>\n                <slot name=\"tabs\"></slot>\n            </ul>\n        </div>\n\n        <div v-if=\"!bottom\" :class=\"['tab-content',{'card-block': card}]\" ref=\"tabsContainer\">\n            <slot></slot>\n            <slot name=\"empty\" v-if=\"!tabs || !tabs.length\"></slot>\n        </div>\n    </component>\n</template>\n\n<script>\n    import observeDom from '../utils/observe-dom';\n\n    export default {\n        data() {\n            return {\n                currentTab: this.value,\n                tabs: []\n            };\n        },\n        props: {\n            id: {\n                type: String,\n                default: ''\n            },\n            tag: {\n                type: String,\n                default: 'div'\n            },\n            noFade: {\n                type: Boolean,\n                default: false\n            },\n            card: {\n                type: Boolean,\n                default: false\n            },\n            small: {\n                type: Boolean,\n                default: false\n            },\n            value: {\n                type: Number,\n                default: 0\n            },\n            pills: {\n                type: Boolean,\n                default: false\n            },\n            lazy: {\n                type: Boolean,\n                default: false\n            },\n            bottom: {\n                type: Boolean,\n                default: false\n            }\n        },\n        watch: {\n            currentTab(val, old) {\n                if (val === old) {\n                    return;\n                }\n\n                this.$root.$emit('changed::tab', this, val, this.tabs[val]);\n                this.$emit('input', val);\n                this.tabs[val].$emit('click');\n            },\n            value(val, old) {\n                if (val === old) {\n                    return;\n                }\n\n                this.setTab(val);\n            },\n            fade(val, old) {\n                if (val === old) {\n                    return;\n                }\n\n                this.tabs.forEach(item => {\n                    this.$set(item, 'fade', val);\n                });\n            }\n        },\n        computed: {\n            fade() {\n                return !this.noFade;\n            },\n            navStyle() {\n                return this.pills ? 'pills' : 'tabs';\n            }\n        },\n        methods: {\n            /**\n             * Util: Return the sign of a number (as -1, 0, or 1)\n             */\n            sign(x) {\n                return (x === 0) ? 0 : (x > 0 ? 1 : -1);\n            },\n\n            /**\n             * Move to next tab\n             */\n            nextTab() {\n                this.setTab(this.currentTab, false, 1);\n            },\n\n            /**\n             * Move to previous tab\n             */\n            previousTab() {\n                this.setTab(this.currentTab, false, -1);\n            },\n\n            /**\n             * Set active tab on the tabs collection and the child 'tab' component\n             */\n            setTab(index, force, offset) {\n                offset = offset || 0;\n\n                // Prevent setting same tab!\n                if (!force && (index + offset) === this.currentTab) {\n                    return;\n                }\n\n                const tab = this.tabs[index + offset];\n\n                // Don't go beyond indexes!\n                if (!tab) {\n                    return;\n                }\n\n                // Ignore or Skip disabled\n                if (tab.disabled) {\n                    if (offset) {\n                        // Skip to next non disabled tab in offset direction (recursive)\n                        this.setTab(index, force, offset + this.sign(offset));\n                    }\n                    return;\n                }\n\n                // Deactivate any previous active tab(s)\n                this.tabs.forEach( t => {\n                    if (t !== tab && t.localActive) {\n                        this.$set(t, 'localActive', false);\n                    }\n                });\n\n                // Set new tab as active\n                this.$set(tab, 'localActive', true);\n\n                // Update currentTab\n                this.currentTab = index + offset;\n            },\n\n            /**\n             * Dynamically update tabs\n             */\n            updateTabs() {\n                // Probe tabs\n                if (this.$slots.default) {\n                    this.tabs = this.$slots.default.filter(tab => tab.componentInstance || false)\n                        .map(tab => tab.componentInstance);\n                } else {\n                    this.tabs = [];\n                }\n\n                this.tabs.forEach(tab => {\n                    this.$set(tab, 'fade', this.fade);\n                    this.$set(tab, 'lazy', this.lazy);\n                });\n\n                // Get initial active tab\n                let tabIndex = this.currentTab;\n\n                if (tabIndex === null || tabIndex === undefined) {\n                    // Find last active tab in current tabs\n                    this.tabs.forEach((tab, index) => {\n                        if (tab.active) {\n                            tabIndex = index;\n                        }\n                    });\n                }\n\n                // Workaround to fix problem when currentTab is removed\n                let offset = 0;\n                if (tabIndex > this.tabs.length - 1) {\n                    offset = -1;\n                }\n\n                this.setTab(tabIndex || 0, true, offset);\n            }\n        },\n        mounted() {\n            this.updateTabs();\n\n            // Observe Child changes so we can notify tabs change\n            observeDom(this.$refs.tabsContainer, this.updateTabs.bind(this), {subtree: false});\n        }\n    };\n\n</script>\n","<template>\n    <transition @enter=\"enter\" @before-leave=\"beforeLeave\" mode=\"out-in\">\n        <component :is=\"tag\"\n                   :id=\"id || null\"\n                   role=\"tabpanel\"\n                   :class=\"['tab-pane', {show, fade, disabled, active: localActive}]\"\n                   :aria-hidden=\"localActive ? 'false' : 'true'\"\n                   :aria-expanded=\"localActive ? 'true' : 'false'\"\n                   :aria-lablelledby=\"controlledBy || null\"\n                   v-if=\"localActive || !lazy\"\n                   v-show=\"localActive || lazy\"\n                   ref=\"panel\"\n        >\n             <slot></slot>\n        </component>\n    </transition>\n</template>\n\n<script>\n    export default {\n        methods: {\n            enter() {\n                this.show = true;\n            },\n            beforeLeave() {\n                this.show = false;\n            }\n        },\n        data() {\n            return {\n                fade: false,\n                localActive: false,\n                lazy: true,\n                show: false\n            };\n        },\n        computed: {\n            controlledBy() {\n                return this.buttonId || (this.id ? (this.id + '__BV_tab_button__') : null);\n            }\n        },\n        props: {\n            id: {\n                type: String,\n                default: ''\n            },\n            tag: {\n                type: String,\n                default: 'div'\n            },\n            buttonId: {\n                type: String,\n                default: ''\n            },\n            title: {\n                type: String,\n                default: ''\n            },\n            headHtml: {\n                type: String,\n                default: null\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            },\n            active: {\n                type: Boolean,\n                default: false\n            },\n            href: {\n                type: String,\n                default: '#'\n            }\n        }\n    };\n\n</script>\n","<template>\n    <div class=\"d-inline-block\">\n        <span class=\"d-inline-block\" ref=\"trigger\"><slot></slot></span>\n        <div :class=\"['tooltip','tooltip-' + this.placement]\"\n             :style=\"{opacity:showState?1:0}\"\n             tabindex=\"-1\"\n             ref=\"popover\"\n             @focus=\"$emit('focus')\"\n             @blur=\"$emit('blur')\"\n        >\n            <div class=\"tooltip-inner\">\n                <slot name=\"content\"><span v-html=\"content\"></span></slot>\n            </div>\n        </div>\n    </div>\n</template>\n\n<style>\n    .tooltip {\n        display: block;\n        transition: all 0.3s;\n    }\n</style>\n\n<script>\n    import popover from '../mixins/popover';\n\n    export default {\n        mixins: [popover],\n        props: {\n            content: {\n                type: String,\n                default: ''\n            },\n            triggers: {\n                type: [Boolean, String, Array],\n                default: 'hover'\n            }\n        }\n    };\n</script>\n","const inBrowser = typeof window !== 'undefined';\n\nimport target from './_target';\n\nconst listen_types = {click: true};\n\nexport default {\n    bind(el, binding) {\n        const targets = target(el, binding, listen_types, ({targets, vm}) => {\n            targets.forEach(target => {\n                vm.$root.$emit('collapse::toggle', target);\n            });\n        });\n        if (inBrowser && el.__vue__ && targets.length > 0) {\n            el.setAttribute('aria-controls', targets.join(' '));\n            el.setAttribute('aria-expanded', 'false');\n            el.__vue__.$root.$on('collapse::toggle::state', (id, state) => {\n                if (targets.indexOf(id) !== -1) {\n                    el.setAttribute('aria-expanded', state ? 'true' : 'false');\n                }\n            });\n        }\n    }\n};\n","import target from './_target';\n\nconst listen_types = {click: true};\n\nexport default {\n    bind(el, binding) {\n        target(el, binding, listen_types, ({targets, vm}) => {\n            targets.forEach(target => {\n                vm.$root.$emit('show::modal', target, el);\n            });\n        });\n    }\n};\n","import * as components from './components';\nimport * as directives from './directives';\n\n/* eslint-disable no-var, no-undef, guard-for-in, object-shorthand */\n\nconst VuePlugin = {\n    install: function (Vue) {\n        if (Vue._bootstrap_vue_installed) {\n            return;\n        }\n\n        Vue._bootstrap_vue_installed = true;\n\n        // Register components\n        for (var component in components) {\n            Vue.component(component, components[component]);\n        }\n\n        // Register directives\n        for (var directive in directives) {\n            Vue.directive(directive, directives[directive]);\n        }\n    }\n};\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(VuePlugin);\n}\n\nexport default VuePlugin;\n"],"names":["arrayIncludes","array","value","indexOf","omitLinkProps","Object","keys","props","reduce","memo","prop","propsToOmit","isVisible","el","offsetWidth","offsetHeight","nodeListToArray","nodeList","Array","prototype","slice","call","filterVisible","els","filter","findFirstVisible","root","selector","querySelectorAll","let","find","i","length","makePageArray","startNum","numPages","apply","map","index","number","className","observeDOM","callback","opts","const","MutationObserver","window","WebKitMutationObserver","eventListenerSupported","addEventListener","mutations","addedNodes","removedNodes","observe","assign","childList","subtree","targets","binding","listen_types","fn","vm","__vue__","console","warn","modifiers","t","all_listen_types","push","listener","forEach","type","isElement","obj","nodeType","closest","element","$QSA","document","$QS","querySelector","getVm","toType","toString","match","toLowerCase","typeCheckConfig","componentName","config","configTypes","property","hasOwnProperty","expectedTypes","valueType","RegExp","test","error","ScrollSpy","this","_$el","_selector","Selector","NAV_LINKS","LIST_ITEMS","DROPDOWN_ITEMS","join","_config","Default","_offsets","_targets","_activeTarget","_scrollHeight","_$root","_resizeTimeout","updateConfig","message","render","data","countDownTimerId","dismissed","created","state","computed","classObject","alertVariant","dismissible","variant","localShow","show","String","default","Boolean","dismissLabel","Number","watch","showChanged","mounted","methods","dismiss","$emit","clearCounter","clearInterval","dismissCountDown","setInterval","active","activeClass","append","disabled","event","exact","exactActiveClass","href","rel","replace","routerTag","tag","target","to","linkProps","isRouterLink","$router","_href","computedRel","componentTag","linkClassObject","linkClick","e","stopPropagation","$root","preventDefault","mixins","linkMixin","bLinkPropKeys","components","bLink","normalizedItems","userDefinedActive","originalItemsLength","items","item","normalizedItem","_originalItem","isLast","text","link","_linkProps","itemProp","required","ariaCurrent","onClick","originalLinkProps","classList","btnVariant","btnSize","btnBlock","btnDisabled","componentType","block","size","btnType","conditionalLinkProps","ITEM_SELECTOR","justify","vertical","keyNav","setItemFocus","$nextTick","focus","focusNext","prev","getItems","focusFirst","focusLast","$el","tabIndex","left","right","id","blockClass","overlay","cardVariant","cardInverse","inverse","cardAlign","align","header","headerVariant","headerClass","headerTag","footer","footerVariant","footerClass","footerTag","title","subTitle","noBlock","img","imgAlt","deck","columns","DIRECTION","next","current","isSliding","slides","labelPrev","labelNext","labelGotoSlide","labelIndicators","interval","indicators","controls","height","background","visibilityState","hidden","pause","_intervalId","start","slide","restart","relatedTarget","contains","add","self","idx","n","setAttribute","val","oldVal","direction","currentSlide","nextSlide","_carouselAnimation","setTimeout","remove","destroyed","clearTimeout","contentVisibleUp","caption","contentClasses","classes","carousel-caption","isArray","listenOnRoot","__bv_root_listeners","$on","emitOnRoot","ref","args","shift","$off","visible","navbar-collapse","isNav","model","newVal","emitState","accordion","toggle","enter","style","realHeight","getComputedStyle","leave","clearHeight","handleToggleEvt","handleAccordionEvt","openedId","documentElement","_clickOutListener","removeEventListener","clickOutListener","HEADER_SELECTOR","ALL_SELECTOR","dropup","clickOut","old","body","children","noop","click","split","getFirstItem","focusItem","onTab","onEsc","$refs","button","up","focusHovered","menu","dropdown","bButton","toggleText","selected","dropdownToggle","caret","displayItem","returnObject","forceDefault","defaultText","result","list","position","select","inline","labelId","label","descriptionId","description","feedbackId","feedback","describedBy","inputState","computedLabelCols","labelSize","labelCols","labelLayout","labelSrOnly","horizontal","labelAlignClass","labelTextAlign","inputLayout","updateTarget","for","content","input","inputSelector","updated","validator","name","custom","plain","checkboxClass","custom-control","form-check-inline","formMixin","formCustomMixin","formCheckBoxMixin","uncheckedValue","checked","inputClass","isChecked","handleChange","x","formOptions","options","option","valueField","textField","selectedValue","localValue","old_value","formOptionsMixin","stacked","ariaInvalid","invalid","staticValue","formatter","Function","bFormInputStatic","rowsCount","format","formattedValue","onInput","lazyFormatter","onChange","onKeyUp","readonly","static","placeholder","rows","textarea","selectedFile","dragging","selectedLabel","multiple","selectedFormat","file","computedChooseLabel","chooseLabel","reset","onFileChange","dataTransfer","noTraverse","setFiles","files","queue","webkitGetAsEntry","traverseFileTree","Promise","all","then","filesArr","concat","filesArray","accept","dragover","noDrop","dropEffect","drop","path","resolve","isFile","$path","isDirectory","createReader","readEntries","entries","directory","dropLabel","fluid","containerFluid","lead","badgeVariant","badgePill","pill","flush","actionTags","listState","isAction","action","myTag","verticalAlignClass","rightAlign","verticalAlign","FOCUS_SELECTOR","bBtn","is_visible","return_focus","returnFocus","new_val","old_val","hide","buttonSize","noFade","noCloseOnBackdrop","noCloseOnEsc","noAutoFocus","hideHeader","hideFooter","hideHeaderClose","okOnly","okDisabled","headerCloseLabel","closeTitle","okTitle","enforceFocus","isOK","canceled","cancel","returnFocusTo","onClickOut","activeElement","showHandler","triggerEl","hideHandler","nav","navbar-nav","isNavBar","nav-tabs","tabs","nav-pills","pills","flex-column","nav-fill","fill","nav-justified","justified","noCaret","toggleState","onclick","handleStateEvt","fixed","sticky","toggleable","toggleableClass","toggleBreakpoint","bForm","ELLIPSIS_THRESHOLD","showFirstDots","showLastDots","currentPage","numberOfPages","Math","ceil","totalRows","perPage","pageList","numLinks","limit","hideEllipsis","floor","pages","isActive","page","pageItemClasses","pageLinkClasses","setPage","num","currentpage","focusCurrent","getButtons","btn","setBtnFocus","reverse","parseInt","getAttribute","focusPrev","buttons","newPage","oldPage","newValue","oldValue","hideGotoEndButtons","ariaLabel","labelFirstPage","firstText","labelPrevPage","prevText","labelNextPage","nextText","labelLastPage","lastText","labelPage","ellipsisText","role","buttonRole","TRIGGER_LISTENERS","hover","mouseenter","mouseleave","blur","PLACEMENT_PARAMS","top","bottom","TETHER_CLASS_PREFIX","TETHER_CLASSES","enabled","TRANSITION_DURATION","constraints","debounce","delay","offset","placement","popoverStyle","targetOffset","triggers","triggerState","classState","lastEvent","normalizedTriggers","popoverAlignment","showState","setOptions","newTriggers","oldTriggers","updateListeners","getDelay","$data","_timeout","togglePopover","addListener","trigger","_trigger","eventHandler","destroyTether","_tether","destroy","regx","timeStamp","getTetherOptions","attachment","_popover","classPrefix","hidePopover","display","refreshPosition","removeListener","showPopover","Tether","newShowState","appliedTriggers","removeTriggers","popover","beforeDestroy","parentElement","removeChild","progressVariant","striped","animated","styleObject","width","progress","p","pow","precision","round","max","showProgress","showValue","v","k","recToString","exclude","_rowVariant","o","defaultSortCompare","a","b","sortBy","localeCompare","undefined","numeric","sortDesc","localItems","itemsProvider","fields","bordered","small","responsive","headVariant","footVariant","sortCompare","noProviderPaging","noProviderSorting","noProviderFiltering","busy","footClone","labelSortAsc","labelSortDesc","showEmpty","emptyText","emptyFilteredText","_providerUpdate","hasProvider","tableClass","headClass","footClass","providerFiltering","providerSorting","providerPaging","context","_items","regex","lastIndex","sort","r","fieldClass","field","key","sortable","class","thClass","tdClass","cellVariant","_cellVariants","rowClass","rowClicked","rowHovered","headClicked","sortChanged","refresh","_providerSetLocal","currentTab","card","lazy","setTab","fade","$set","navStyle","sign","nextTab","previousTab","force","tab","localActive","updateTabs","$slots","componentInstance","observeDom","tabsContainer","bind","beforeLeave","controlledBy","buttonId","headHtml","inBrowser","isServer","Element","s","matches","ownerDocument","NAME","EVENT","BVSS","method","throttle","DefaultType","ClassName","DROPDOWN_ITEM","DROPDOWN_MENU","DROPDOWN_TOGGLE","NAV_LINK","LIST_ITEM","ACTIVE","NAV_LIST_GROUP","NAV","LIST_GROUP","DROPDOWN","OffsetMethod","OFFSET","POSITION","arg","listen","scroller","_getScroller","tagName","unListen","autoMethod","offsetMethod","offsetBase","_getScrollTop","_getScrollHeight","charAt","bcr","getBoundingClientRect","offsetTop","process","scrollTop","scrollHeight","maxScroll","_getOffsetHeight","_activate","_clear","dispose","handleEvent","pageYOffset","innerHeight","queries","links","_setActiveState","_setParentsSiblingActiveState","$props","previousElementSibling","inserted","update","componentUpdated","unbind","VuePlugin","install","Vue","_bootstrap_vue_installed","component","directive","directives","use"],"mappings":"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"}